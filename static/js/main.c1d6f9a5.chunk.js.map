{"version":3,"sources":["../node_modules/codemirror/mode lazy /^/.*/.js$/ groupOptions: {} namespace object","blueprint/serialization.ts","base/util.ts","gpu/gpu.ts","gpu/program/resource_cache.ts","gpu/program/buffer_cache.ts","gpu/program/sampler_cache.ts","gpu/builtin_uniforms.ts","gpu/program/shader_cache.ts","gpu/program/texture_cache.ts","gpu/program/program_map.ts","gpu/program/resource_bundle.ts","gpu/program/executable.ts","gpu/program/linker.ts","gpu/program/program.ts","gpu/frame_producer.ts","ui/code_mirror_themes.ts","ui/labeled_field.tsx","ui/control_panel.tsx","ui/display.tsx","base/key_generator.ts","ui/graph/binding_panel.tsx","ui/editable_label.tsx","ui/graph/panel.tsx","ui/graph/connection_validation.ts","ui/graph/buffer_panel.tsx","base/debouncer.ts","ui/graph/render_panel.tsx","ui/graph/texture_panel.tsx","ui/blueprint_editor.tsx","ui/graph/compute_panel.tsx","ui/graph/sampler_panel.tsx","ui/graph/buffer_binding_panel.tsx","ui/graph/sampler_binding_panel.tsx","ui/graph/texture_binding_panel.tsx","ui/graph/custom_edge.tsx","ui/code_editor.tsx","ui/tab_container.tsx","ui/editor.tsx","app.tsx","app_data.ts","presets/basic.ts","presets/boids.ts","presets/instances.ts","base/local_persistent.ts","index.tsx"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","all","slice","t","keys","Object","module","exports","deserializeBindingNode","data","baseConnection","baseBinding","connectionType","group","binding","bindingType","storageType","console","warn","deserializeBufferBindingNode","deserializeSamplerBindingNode","deserializeTextureBindingNode","unknownData","deserializeNode","base","name","position","x","y","type","vertexShader","vertexEntryPoint","fragmentShader","fragmentEntryPoint","topology","indexed","numVertices","numInstances","clear","clearColor","r","g","b","a","depthTest","deserializeRenderNode","shader","entryPoint","dispatchSize","z","deserializeComputeNode","size","init","deserializeBufferNode","imageData","Blob","toByteArray","width","height","format","mipLevelCount","sampleCount","deserializeTextureNode","deserializeSamplerNode","source","target","deserializeConnectionNode","deserializeShader","deserializeBlueprint","serialized","blueprint","nodes","shaders","deserialized","serializeRenderNode","node","serializeComputeNode","serializeBufferNode","serializeTextureNode","options","serializeBlobs","fromByteArray","Uint8Array","arrayBuffer","serializeSamplerNode","serializeBindingNode","serializeBufferBindingNode","serializeTextureBindingNode","serializeSamplerBindingNode","serializeConnectionNode","serializeNode","serializeShader","serializeBlueprint","Array","from","values","version","doCopy","value","traversed","isArray","has","add","copy","entries","k","v","undefined","deepCopy","Set","deepEquals","length","every","i","objectPromiseAll","object","key","fromEntries","deepUpdate","isDict","constructor","hasOwnProperty","Gpu","adapter_","device_","lost_","pendingAcquisition_","onAcquired","onLost","acquire","acquireInternal_","release","isAcquired","onLost_","setTimeout","this","navigator","gpu","requestAdapter","adapter","requestDevice","device","log","lost","ResourceCache","compiler","compiler_","cache_","Map","get","newCache","resource","dispose","programMap","pendingUpdates","getCurrentDescriptors","descriptor","entry","needsRecompile","set","push","update","compile","newResource","fillRandomUint32Array","offset","byteLength","Math","min","view","Uint32Array","buffer","crypto","getRandomValues","BufferResource","usage","size_","init_","usage_","buffer_","destroy","BufferCompiler","buffers","newDescriptor","bufferUsage","mappedAtCreation","createBuffer","getMappedRange","uints","floats","Float32Array","forEach","unmap","createBufferCache","SamplerResource","sampler","sampler_","SamplerCompiler","samplers","createSampler","createSamplerCache","BUILTIN_UNIFORMS_WGSL","BUILTIN_WGSL_NUM_LINES","split","ShaderResource","messages","code_","module_","messages_","ShaderCompiler","createShaderModule","compilationInfo","info","failed","message","lineNum","linePos","createShaderCache","TextureResource","bitmap","texture","imageData_","bitmap_","texture_","TextureCompiler","textures","createImageBitmap","createTexture","GPUTextureUsage","TEXTURE_BINDING","COPY_DST","RENDER_ATTACHMENT","queue","copyExternalImageToTexture","createTextureCache","ProgramMap","passes","bindings","textureUsage","passOrder","s","populate_","bindingNodes","queueDeps","incoming","outgoing","populateBindings_","computePassOrder_","pass","groups","bindingNode","compileBufferBinding_","compileTextureBinding_","compileSamplerBinding_","startNodes","delete","thisPhase","nextPhase","added","targets","incomingDeps","passType","bufferType","newUsage","GPUBufferUsage","STORAGE","UNIFORM","layoutEntry","visibility","visibilityForPass","addBindGroupEntry","groupBindings","GPUShaderStage","VERTEX","FRAGMENT","COMPUTE","ResourceBundle","lastCompile_","caches_","programMap_","thisCompile","doCompile_","newResources","replace","Executable","passes_","outputDepthStencilTexture_","outputDepthStencilTextureSize_","submit","encodeCommands_","encoder","createCommandEncoder","encodeRenderCommands_","encodeComputeCommands_","finish","loadValue","depthStencilTexture","renderPass","beginRenderPass","colorAttachments","createView","storeOp","depthStencilAttachment","depthLoadValue","depthStoreOp","stencilLoadValue","stencilStoreOp","executeBundles","bundle","endPass","computePass","beginComputePass","setPipeline","pipeline","bindGroups","setBindGroup","dispatch","max","getResourceForBinding","resources","linkBindings","passId","builtinUniforms","layoutEntries","groupEntries","newLayoutEntries","newGroupEntries","unshift","bindGroupLayouts","layout","createBindGroupLayout","createBindGroup","pipelineLayout","createPipelineLayout","linkPass","outputFormat","vertex","fragment","stripIndexFormat","createRenderPipeline","primitive","cullMode","depthStencil","depthWriteEnabled","depthCompare","createRenderBundleEncoder","colorFormats","depthStencilFormat","draw","linkRenderPass","shaderDescriptor","createComputePipeline","compute","linkComputePass","linkProgram","linkedPasses","filter","Program","builtinUniforms_","resources_","executable_","blueprint_","outputFormat_","onShadersCompiled_","handler","compile_","uniforms","ArrayBuffer","writeBuffer","resolution","run","results","FrameProducer","gpu_","lastUsedContext_","lastUsedResolution_","startTime_","lastFrameTime_","frame_","program_","onGpuAcquired_","setBlueprint","onShadersCompiled","canvas","context","getContext","getContextFromCanvas","stop","getPreferredFormat","configure","style","now","Date","getTime","delta","updateUniforms","time","timeDelta","frame","getCurrentTexture","CODE_MIRROR_THEMES","LabeledField","label","children","className","ControlPanel","props","pixelSizeToggleRef_","pixelSizeRef_","framebufferWidthRef_","framebufferHeightRef_","importRef_","saveBlueprint_","prompt","onSaveBlueprint","loadBlueprint_","onLoadBlueprint","toggleLoadBlueprintPanel_","copyBlueprintToClipboard_","clipboard","JSON","stringify","writeText","importBlueprintFromClipboard_","togglePasteMenu_","current","serializedBlueprint","parse","onImportBlueprint","setState","state","pasteMenuVisible","deleteBlueprint_","onDeleteBlueprint","loadMenuVisible","toggleOptions_","optionsVisible","enterFullscreen_","document","querySelector","requestFullscreen","setAspectRatio_","onDisplayConfigChange","aspect","currentTarget","updateResolution_","framebufferSize","parseInt","isNaN","mode","pixelSize","React","createRef","displayConfig","makeAspectOption","ratio","onChange","checked","title","onClick","ref","marginLeft","codeMirrorTheme","onCodeMirrorThemeChange","theme","savedBlueprints","Component","Display","wrapperRef_","canvasRef_","pendingFrameRequest_","renderNextFrame","wrapper","clientWidth","clientHeight","render","requestAnimationFrame","cancelAnimationFrame","config","aspectX","aspectY","stretch","computedWrapperStyle","aspectRatio","KeyGenerator","nextIdMap_","WeakMap","maybePrefix","idMap","prefix","nextId","nextKey","BindingPanel","isConnectable","valueAsNumber","EditableLabel","onClick_","enabled","isEditing","commit_","untrimmedValue","trim","onKeyDown_","onFocusOut_","isEmpty","editingClass","emptyClass","defaultValue","emptyText","onKeyDown","onBlur","readOnly","autoFocus","Panel","onRename","resolveConnection","c","targetHandle","sourceName","targetName","isValidBindingConnection","some","isValidQueueConnection","Debouncer","minDelayMs","minDelayMs_","lastInvocationMs_","pendingInvocation_","f","onCooldown","scheduleSuppressed","invokeInternal","clearTimeout","clearPendingInvocation","delay","invoke","bind","colorValue","cp","toString","join","parseColor","parseComponent","index","image","drawImage","NODE_TYPES","isValidConnection","textAlign","canvasRef","useRef","useEffect","updateCanvasImage","accept","input","file","files","debouncer","EDGE_TYPES","sourceX","sourceY","targetX","targetY","sourcePosition","targetPosition","anyData","arrowHeadType","markerEndId","path","getBezierPath","end","getMarkerEnd","getEdgeCenter","centerX","centerY","d","markerEnd","FlowErrorBounary","error","errorInfo","BlueprintEditor","keyGenerator_","instance_","flowRef_","lastConnectStart_","lastConnectEnd_","onLoad_","instance","onConnectStart_","clientX","clientY","onConnectStop_","onConnect_","edge","sourceId","targetId","handle","isPass","start","flow","getBoundingClientRect","midpoint","project","addBufferBinding_","addTextureBinding_","addSamplerBinding_","newNodeKey_","updateNode_","onMoveEnd_","transform","onTransformChange","onMoveNode_","event","addShader_","newShaderKey_","updateBlueprint_","addNode_","addBuffer_","addTexture_","addSampler_","addRenderPass_","addComputePass_","removeNode_","removedId","removedIds","remainingNodes","replaceBlueprint_","nodeTypes","edgeTypes","elements","createGraph_","defaultZoom","zoom","defaultPosition","elementsSelectable","nodesConnectable","nodesDraggable","onLoad","onConnectStart","onConnectStop","onConnect","onElementClick","onMoveEnd","onNodeDragStop","minZoom","maxZoom","generateKey","newKey_","sourceEdge","targetEdge","CodeEditor","isDecorating_","editorRef_","onChange_","change","getValue","onUpdate_","getAllMarks","m","clearGutter","compilationMessages","line","markText","ch","marker","createElement","classList","setGutterMarker","nextProps","cm","editor","refresh","contents","onUpdate","keyMap","gutters","mutable","TabContainer","activeTab","numChildren","Children","count","tab","tabs","onActivate","renderTabs_","toArray","child","active","_","setActiveTab_","onClose","stopPropagation","Editor","refreshEditor","uniformsRef","refs","onBlueprintChange","removeShader","newName","renameShader","viewTransform","onViewTransformChange","compilationResults","App","frameProducer_","assign","onBlueprintChange_","onViewTransformChange_","editorViewTransform","onSaveBlueprint_","onLoadBlueprint_","onImportBlueprint_","onDeleteBlueprint_","onCodeMirrorThemeChange_","updateData_","DEFAULT_APP_DATA","Basic","Boids","Instances","LocalPersistent","initialValue","debounceMs","key_","cachedValue_","debouncer_","localForage","setItem","loadValueFromLocalStorage","serializedValue","localStorage","cachedValue","restoreLocalPersistent","asyncCachedValue","getItem","cachedLegacyValue","restoredValue","default","StrictMode","getElementById","driver","INDEXEDDB","storeName"],"mappings":"uNAAA,IAAIA,EAAM,CACT,eAAgB,CACf,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,mBAAoB,CACnB,IACA,IAED,yBAA0B,CACzB,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,mBAAoB,CACnB,IACA,GAED,uBAAwB,CACvB,IACA,IAED,mBAAoB,CACnB,IACA,IAED,mBAAoB,CACnB,IACA,IAED,iCAAkC,CACjC,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,uBAAwB,CACvB,IACA,IAED,eAAgB,CACf,IACA,GAED,qBAAsB,CACrB,IACA,IAED,WAAY,CACX,IACA,IAED,iBAAkB,CACjB,IACA,EACA,IAED,iBAAkB,CACjB,IACA,IAED,qBAAsB,CACrB,IACA,EACA,EACA,IAED,6BAA8B,CAC7B,IACA,IAED,eAAgB,CACf,IACA,IAED,mBAAoB,CACnB,IACA,IAED,iBAAkB,CACjB,IACA,IAED,eAAgB,CACf,IACA,IAED,qBAAsB,CACrB,IACA,IAED,eAAgB,CACf,IACA,IAED,qBAAsB,CACrB,IACA,IAED,qBAAsB,CACrB,IACA,IAED,eAAgB,CACf,IACA,IAED,mBAAoB,CACnB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,eAAgB,CACf,IACA,IAED,eAAgB,CACf,IACA,EACA,IAED,uBAAwB,CACvB,IACA,IAED,aAAc,CACb,IACA,IAED,qBAAsB,CACrB,IACA,IAED,iBAAkB,CACjB,IACA,EACA,EACA,IAED,6BAA8B,CAC7B,IACA,IAED,yCAA0C,CACzC,IACA,IAED,uBAAwB,CACvB,IACA,IAED,iBAAkB,CACjB,IACA,IAED,iCAAkC,CACjC,IACA,EACA,EACA,IAED,2BAA4B,CAC3B,IACA,EACA,EACA,IAED,iBAAkB,CACjB,IACA,IAED,eAAgB,CACf,IACA,IAED,6BAA8B,CAC7B,IACA,GAED,qBAAsB,CACrB,IACA,IAED,eAAgB,CACf,IACA,EACA,IAED,mBAAoB,CACnB,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,eAAgB,CACf,IACA,IAED,yBAA0B,CACzB,IACA,GAED,+BAAgC,CAC/B,IACA,IAED,iBAAkB,CACjB,IACA,IAED,YAAa,CACZ,IAED,iBAAkB,CACjB,IACA,IAED,qBAAsB,CACrB,IACA,IAED,yBAA0B,CACzB,IACA,IAED,qBAAsB,CACrB,IACA,IAED,mBAAoB,CACnB,IACA,IAED,mBAAoB,CACnB,IACA,IAED,iBAAkB,CACjB,IACA,IAED,yBAA0B,CACzB,IACA,IAED,qBAAsB,CACrB,IACA,IAED,aAAc,CACb,IACA,IAED,qBAAsB,CACrB,IACA,IAED,mBAAoB,CACnB,IACA,EACA,IAED,iBAAkB,CACjB,IACA,IAED,eAAgB,CACf,IACA,EACA,EACA,EACA,IAED,eAAgB,CACf,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,yBAA0B,CACzB,IACA,IAED,eAAgB,CACf,IACA,EACA,EACA,GAED,qBAAsB,CACrB,IACA,IAED,qBAAsB,CACrB,IACA,IAED,WAAY,CACX,IACA,IAED,WAAY,CACX,IACA,IAED,eAAgB,CACf,IACA,IAED,eAAgB,CACf,IACA,IAED,iBAAkB,CACjB,IACA,IAED,iBAAkB,CACjB,IACA,IAED,eAAgB,CACf,IACA,IAED,iBAAkB,CACjB,IACA,EACA,IAED,qBAAsB,CACrB,IACA,IAED,mBAAoB,CACnB,IACA,IAED,mBAAoB,CACnB,IACA,IAED,iBAAkB,CACjB,IACA,EACA,EACA,IAED,2BAA4B,CAC3B,IACA,IAED,qBAAsB,CACrB,IACA,IAED,iBAAkB,CACjB,IACA,IAED,eAAgB,CACf,IACA,EACA,EACA,IAED,qBAAsB,CACrB,IACA,IAED,+BAAgC,CAC/B,IACA,KAED,eAAgB,CACf,IACA,KAED,iBAAkB,CACjB,IACA,KAED,qBAAsB,CACrB,IACA,GAED,mBAAoB,CACnB,IACA,KAED,eAAgB,CACf,IACA,KAED,uBAAwB,CACvB,IACA,KAED,6BAA8B,CAC7B,IACA,KAED,iBAAkB,CACjB,IACA,KAED,iBAAkB,C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","file":"static/js/main.c1d6f9a5.chunk.js","sourcesContent":["var map = {\n\t\"./apl/apl.js\": [\n\t\t139,\n\t\t30\n\t],\n\t\"./asciiarmor/asciiarmor.js\": [\n\t\t140,\n\t\t31\n\t],\n\t\"./asn.1/asn.1.js\": [\n\t\t141,\n\t\t32\n\t],\n\t\"./asterisk/asterisk.js\": [\n\t\t142,\n\t\t33\n\t],\n\t\"./brainfuck/brainfuck.js\": [\n\t\t143,\n\t\t34\n\t],\n\t\"./clike/clike.js\": [\n\t\t128,\n\t\t2\n\t],\n\t\"./clojure/clojure.js\": [\n\t\t144,\n\t\t35\n\t],\n\t\"./cmake/cmake.js\": [\n\t\t145,\n\t\t36\n\t],\n\t\"./cobol/cobol.js\": [\n\t\t146,\n\t\t37\n\t],\n\t\"./coffeescript/coffeescript.js\": [\n\t\t129,\n\t\t38\n\t],\n\t\"./commonlisp/commonlisp.js\": [\n\t\t147,\n\t\t39\n\t],\n\t\"./crystal/crystal.js\": [\n\t\t148,\n\t\t40\n\t],\n\t\"./css/css.js\": [\n\t\t125,\n\t\t1\n\t],\n\t\"./cypher/cypher.js\": [\n\t\t149,\n\t\t41\n\t],\n\t\"./d/d.js\": [\n\t\t150,\n\t\t42\n\t],\n\t\"./dart/dart.js\": [\n\t\t151,\n\t\t2,\n\t\t43\n\t],\n\t\"./diff/diff.js\": [\n\t\t152,\n\t\t44\n\t],\n\t\"./django/django.js\": [\n\t\t153,\n\t\t0,\n\t\t1,\n\t\t11\n\t],\n\t\"./dockerfile/dockerfile.js\": [\n\t\t154,\n\t\t21\n\t],\n\t\"./dtd/dtd.js\": [\n\t\t155,\n\t\t45\n\t],\n\t\"./dylan/dylan.js\": [\n\t\t156,\n\t\t46\n\t],\n\t\"./ebnf/ebnf.js\": [\n\t\t157,\n\t\t47\n\t],\n\t\"./ecl/ecl.js\": [\n\t\t158,\n\t\t48\n\t],\n\t\"./eiffel/eiffel.js\": [\n\t\t159,\n\t\t49\n\t],\n\t\"./elm/elm.js\": [\n\t\t160,\n\t\t50\n\t],\n\t\"./erlang/erlang.js\": [\n\t\t161,\n\t\t51\n\t],\n\t\"./factor/factor.js\": [\n\t\t162,\n\t\t22\n\t],\n\t\"./fcl/fcl.js\": [\n\t\t163,\n\t\t52\n\t],\n\t\"./forth/forth.js\": [\n\t\t164,\n\t\t53\n\t],\n\t\"./fortran/fortran.js\": [\n\t\t165,\n\t\t54\n\t],\n\t\"./gas/gas.js\": [\n\t\t166,\n\t\t55\n\t],\n\t\"./gfm/gfm.js\": [\n\t\t167,\n\t\t4,\n\t\t20\n\t],\n\t\"./gherkin/gherkin.js\": [\n\t\t168,\n\t\t56\n\t],\n\t\"./go/go.js\": [\n\t\t169,\n\t\t57\n\t],\n\t\"./groovy/groovy.js\": [\n\t\t170,\n\t\t58\n\t],\n\t\"./haml/haml.js\": [\n\t\t171,\n\t\t0,\n\t\t1,\n\t\t14\n\t],\n\t\"./handlebars/handlebars.js\": [\n\t\t130,\n\t\t16\n\t],\n\t\"./haskell-literate/haskell-literate.js\": [\n\t\t172,\n\t\t26\n\t],\n\t\"./haskell/haskell.js\": [\n\t\t131,\n\t\t59\n\t],\n\t\"./haxe/haxe.js\": [\n\t\t173,\n\t\t60\n\t],\n\t\"./htmlembedded/htmlembedded.js\": [\n\t\t174,\n\t\t0,\n\t\t1,\n\t\t10\n\t],\n\t\"./htmlmixed/htmlmixed.js\": [\n\t\t124,\n\t\t0,\n\t\t1,\n\t\t27\n\t],\n\t\"./http/http.js\": [\n\t\t175,\n\t\t61\n\t],\n\t\"./idl/idl.js\": [\n\t\t176,\n\t\t62\n\t],\n\t\"./javascript/javascript.js\": [\n\t\t126,\n\t\t0\n\t],\n\t\"./jinja2/jinja2.js\": [\n\t\t177,\n\t\t63\n\t],\n\t\"./jsx/jsx.js\": [\n\t\t178,\n\t\t0,\n\t\t28\n\t],\n\t\"./julia/julia.js\": [\n\t\t179,\n\t\t64\n\t],\n\t\"./livescript/livescript.js\": [\n\t\t180,\n\t\t65\n\t],\n\t\"./lua/lua.js\": [\n\t\t181,\n\t\t66\n\t],\n\t\"./markdown/markdown.js\": [\n\t\t136,\n\t\t4\n\t],\n\t\"./mathematica/mathematica.js\": [\n\t\t182,\n\t\t67\n\t],\n\t\"./mbox/mbox.js\": [\n\t\t183,\n\t\t68\n\t],\n\t\"./meta.js\": [\n\t\t24\n\t],\n\t\"./mirc/mirc.js\": [\n\t\t184,\n\t\t69\n\t],\n\t\"./mllike/mllike.js\": [\n\t\t185,\n\t\t70\n\t],\n\t\"./modelica/modelica.js\": [\n\t\t186,\n\t\t71\n\t],\n\t\"./mscgen/mscgen.js\": [\n\t\t187,\n\t\t72\n\t],\n\t\"./mumps/mumps.js\": [\n\t\t188,\n\t\t73\n\t],\n\t\"./nginx/nginx.js\": [\n\t\t189,\n\t\t74\n\t],\n\t\"./nsis/nsis.js\": [\n\t\t190,\n\t\t23\n\t],\n\t\"./ntriples/ntriples.js\": [\n\t\t191,\n\t\t75\n\t],\n\t\"./octave/octave.js\": [\n\t\t192,\n\t\t76\n\t],\n\t\"./oz/oz.js\": [\n\t\t193,\n\t\t77\n\t],\n\t\"./pascal/pascal.js\": [\n\t\t194,\n\t\t78\n\t],\n\t\"./pegjs/pegjs.js\": [\n\t\t195,\n\t\t0,\n\t\t79\n\t],\n\t\"./perl/perl.js\": [\n\t\t196,\n\t\t80\n\t],\n\t\"./php/php.js\": [\n\t\t197,\n\t\t0,\n\t\t1,\n\t\t2,\n\t\t17\n\t],\n\t\"./pig/pig.js\": [\n\t\t198,\n\t\t81\n\t],\n\t\"./powershell/powershell.js\": [\n\t\t199,\n\t\t82\n\t],\n\t\"./properties/properties.js\": [\n\t\t200,\n\t\t83\n\t],\n\t\"./protobuf/protobuf.js\": [\n\t\t201,\n\t\t84\n\t],\n\t\"./pug/pug.js\": [\n\t\t137,\n\t\t0,\n\t\t1,\n\t\t3\n\t],\n\t\"./puppet/puppet.js\": [\n\t\t202,\n\t\t85\n\t],\n\t\"./python/python.js\": [\n\t\t132,\n\t\t86\n\t],\n\t\"./q/q.js\": [\n\t\t203,\n\t\t87\n\t],\n\t\"./r/r.js\": [\n\t\t204,\n\t\t88\n\t],\n\t\"./rpm/rpm.js\": [\n\t\t205,\n\t\t89\n\t],\n\t\"./rst/rst.js\": [\n\t\t206,\n\t\t13\n\t],\n\t\"./ruby/ruby.js\": [\n\t\t127,\n\t\t90\n\t],\n\t\"./rust/rust.js\": [\n\t\t207,\n\t\t24\n\t],\n\t\"./sas/sas.js\": [\n\t\t208,\n\t\t91\n\t],\n\t\"./sass/sass.js\": [\n\t\t134,\n\t\t1,\n\t\t92\n\t],\n\t\"./scheme/scheme.js\": [\n\t\t209,\n\t\t93\n\t],\n\t\"./shell/shell.js\": [\n\t\t210,\n\t\t94\n\t],\n\t\"./sieve/sieve.js\": [\n\t\t211,\n\t\t95\n\t],\n\t\"./slim/slim.js\": [\n\t\t212,\n\t\t0,\n\t\t1,\n\t\t15\n\t],\n\t\"./smalltalk/smalltalk.js\": [\n\t\t213,\n\t\t96\n\t],\n\t\"./smarty/smarty.js\": [\n\t\t214,\n\t\t97\n\t],\n\t\"./solr/solr.js\": [\n\t\t215,\n\t\t98\n\t],\n\t\"./soy/soy.js\": [\n\t\t216,\n\t\t0,\n\t\t1,\n\t\t18\n\t],\n\t\"./sparql/sparql.js\": [\n\t\t217,\n\t\t99\n\t],\n\t\"./spreadsheet/spreadsheet.js\": [\n\t\t218,\n\t\t100\n\t],\n\t\"./sql/sql.js\": [\n\t\t219,\n\t\t101\n\t],\n\t\"./stex/stex.js\": [\n\t\t133,\n\t\t102\n\t],\n\t\"./stylus/stylus.js\": [\n\t\t138,\n\t\t5\n\t],\n\t\"./swift/swift.js\": [\n\t\t220,\n\t\t103\n\t],\n\t\"./tcl/tcl.js\": [\n\t\t221,\n\t\t104\n\t],\n\t\"./textile/textile.js\": [\n\t\t222,\n\t\t105\n\t],\n\t\"./tiddlywiki/tiddlywiki.js\": [\n\t\t223,\n\t\t106\n\t],\n\t\"./tiki/tiki.js\": [\n\t\t224,\n\t\t107\n\t],\n\t\"./toml/toml.js\": [\n\t\t225,\n\t\t108\n\t],\n\t\"./tornado/tornado.js\": [\n\t\t226,\n\t\t0,\n\t\t1,\n\t\t12\n\t],\n\t\"./troff/troff.js\": [\n\t\t227,\n\t\t109\n\t],\n\t\"./ttcn-cfg/ttcn-cfg.js\": [\n\t\t229,\n\t\t110\n\t],\n\t\"./ttcn/ttcn.js\": [\n\t\t228,\n\t\t111\n\t],\n\t\"./turtle/turtle.js\": [\n\t\t230,\n\t\t112\n\t],\n\t\"./twig/twig.js\": [\n\t\t231,\n\t\t19\n\t],\n\t\"./vb/vb.js\": [\n\t\t232,\n\t\t113\n\t],\n\t\"./vbscript/vbscript.js\": [\n\t\t233,\n\t\t114\n\t],\n\t\"./velocity/velocity.js\": [\n\t\t234,\n\t\t115\n\t],\n\t\"./verilog/verilog.js\": [\n\t\t235,\n\t\t116\n\t],\n\t\"./vhdl/vhdl.js\": [\n\t\t236,\n\t\t117\n\t],\n\t\"./vue/vue.js\": [\n\t\t237,\n\t\t0,\n\t\t1,\n\t\t5,\n\t\t3,\n\t\t9\n\t],\n\t\"./wast/wast.js\": [\n\t\t238,\n\t\t25\n\t],\n\t\"./webidl/webidl.js\": [\n\t\t239,\n\t\t118\n\t],\n\t\"./xml/xml.js\": [\n\t\t123,\n\t\t119\n\t],\n\t\"./xquery/xquery.js\": [\n\t\t240,\n\t\t120\n\t],\n\t\"./yacas/yacas.js\": [\n\t\t241,\n\t\t121\n\t],\n\t\"./yaml-frontmatter/yaml-frontmatter.js\": [\n\t\t242,\n\t\t29\n\t],\n\t\"./yaml/yaml.js\": [\n\t\t135,\n\t\t122\n\t],\n\t\"./z80/z80.js\": [\n\t\t243,\n\t\t123\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__.t(id, 7);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 120;\nmodule.exports = webpackAsyncContext;","import { toByteArray, fromByteArray } from 'base64-js';\n\nimport * as blueprint from './blueprint';\n\nexport interface SerializedBlueprint {\n  version: number;\n  nodes: SerializedNode[];\n  shaders: SerializedShader[];\n}\n\nexport type SerializedNode =\n  | SerializedRenderNode\n  | SerializedComputeNode\n  | SerializedBufferNode\n  | SerializedTextureNode\n  | SerializedSamplerNode\n  | SerializedConnectionNode;\n\nexport type SerializedConnectionNode =\n  | SerializedQueueNode\n  | SerializedBufferBindingNode\n  | SerializedTextureBindingNode\n  | SerializedSamplerBindingNode;\n\nexport interface SerializedNodeBase {\n  id: string;\n  type: string;\n  name?: string;\n  position?: { x: number; y: number };\n}\n\nexport interface SerializedRenderNode extends SerializedNodeBase {\n  type: 'render';\n\n  vertexShader?: string | null;\n  vertexEntryPoint?: string | null;\n\n  fragmentShader?: string | null;\n  fragmentEntryPoint?: string | null;\n\n  topology?: GPUPrimitiveTopology;\n  indexed?: boolean;\n  numVertices?: number;\n  numInstances?: number;\n\n  clear?: boolean;\n  clearColor?: GPUColorDict;\n\n  depthTest?: GPUCompareFunction;\n}\n\nexport interface SerializedComputeNode extends SerializedNodeBase {\n  type: 'compute';\n  shader?: string | null;\n  entryPoint?: string | null;\n  dispatchSize?: { x: number; y: number; z: number };\n}\n\nexport interface SerializedBufferNode extends SerializedNodeBase {\n  type: 'buffer';\n  size?: number;\n  init?: blueprint.BufferInitializer;\n}\n\nexport interface SerializedTextureNode extends SerializedNodeBase {\n  type: 'texture';\n  imageData?: string | Blob | null;\n  size?: GPUExtent3DDict;\n  format?: GPUTextureFormat;\n  mipLevelCount?: number;\n  sampleCount?: number;\n}\n\nexport interface SerializedSamplerNode extends SerializedNodeBase {\n  type: 'sampler';\n}\n\nexport interface SerializedShader {\n  id: string;\n  name?: string;\n  code?: string;\n}\n\nexport interface SerializedConnectionNodeBase extends SerializedNodeBase {\n  type: 'connection';\n  connectionType?: string;\n  source?: string;\n  target?: string;\n}\n\nexport interface SerializedBindingNodeBase\n  extends SerializedConnectionNodeBase {\n  connectionType: 'binding';\n  bindingType?: string;\n  group?: number;\n  binding?: number;\n}\n\nexport interface SerializedBufferBindingNode extends SerializedBindingNodeBase {\n  bindingType: 'buffer';\n  storageType?: string;\n}\n\nexport type SerializedBindingNode =\n  | SerializedBufferBindingNode\n  | SerializedTextureBindingNode\n  | SerializedSamplerBindingNode;\n\nexport interface SerializedTextureBindingNode\n  extends SerializedBindingNodeBase {\n  bindingType: 'texture';\n}\n\nexport interface SerializedSamplerBindingNode\n  extends SerializedBindingNodeBase {\n  bindingType: 'sampler';\n}\n\nexport interface SerializedQueueNode extends SerializedConnectionNodeBase {\n  connectionType: 'queue';\n}\n\ntype NodeBaseData = Omit<blueprint.NodeBase, 'type'>;\n\nfunction deserializeRenderNode(\n  data: SerializedRenderNode,\n  base: NodeBaseData\n): blueprint.RenderNode {\n  return {\n    ...base,\n    type: 'render',\n    vertexShader: data.vertexShader ?? null,\n    vertexEntryPoint: data.vertexEntryPoint ?? null,\n    fragmentShader: data.fragmentShader ?? null,\n    fragmentEntryPoint: data.fragmentEntryPoint ?? null,\n    topology: data.topology ?? 'triangle-list',\n    indexed: data.indexed ?? false,\n    numVertices: data.numVertices ?? 3,\n    numInstances: data.numInstances ?? 1,\n    clear: data.clear ?? false,\n    clearColor: data.clearColor ?? { r: 0, g: 0, b: 0, a: 0 },\n    depthTest: data.depthTest ?? 'always',\n  };\n}\n\nfunction deserializeComputeNode(\n  data: SerializedComputeNode,\n  base: NodeBaseData\n): blueprint.ComputeNode {\n  return {\n    ...base,\n    type: 'compute',\n    shader: data.shader ?? null,\n    entryPoint: data.entryPoint ?? null,\n    dispatchSize: data.dispatchSize ?? { x: 1, y: 1, z: 1 },\n  };\n}\n\nfunction deserializeBufferNode(\n  data: SerializedBufferNode,\n  base: NodeBaseData\n): blueprint.BufferNode {\n  return {\n    ...base,\n    type: 'buffer',\n    size: data.size ?? 16384,\n    init: data.init ?? 'zero',\n  };\n}\n\nfunction deserializeTextureNode(\n  data: SerializedTextureNode,\n  base: NodeBaseData\n): blueprint.TextureNode {\n  let imageData: Blob | null = null;\n  if (data.imageData) {\n    if (data.imageData instanceof Blob) {\n      imageData = data.imageData;\n    } else {\n      imageData = new Blob([toByteArray(data.imageData)]);\n    }\n  }\n\n  return {\n    ...base,\n    type: 'texture',\n    imageData,\n    size: data.size ?? { width: 1, height: 1 },\n    format: data.format ?? 'rgba8unorm',\n    mipLevelCount: data.mipLevelCount ?? 1,\n    sampleCount: data.sampleCount ?? 1,\n  };\n}\n\nfunction deserializeSamplerNode(\n  data: SerializedSamplerNode,\n  base: NodeBaseData\n): blueprint.SamplerNode {\n  return {\n    ...base,\n    type: 'sampler',\n  };\n}\n\ntype BindingNodeBaseData = Omit<blueprint.BindingNodeBase, 'bindingType'>;\n\nfunction deserializeBufferBindingNode(\n  data: SerializedBufferBindingNode,\n  baseBinding: BindingNodeBaseData\n): blueprint.BufferBindingNode | null {\n  switch (data.storageType) {\n    case 'storage':\n    case 'storage-read':\n    case 'uniform':\n      break;\n\n    default:\n      console.warn(\n        `ignoring buffer binding with unknown storage type: ${data.storageType}`\n      );\n      return null;\n  }\n\n  return {\n    ...baseBinding,\n    bindingType: 'buffer',\n    storageType: data.storageType ?? 'storage',\n  };\n}\n\nfunction deserializeSamplerBindingNode(\n  data: SerializedSamplerBindingNode,\n  baseBinding: BindingNodeBaseData\n): blueprint.SamplerBindingNode | null {\n  return {\n    ...baseBinding,\n    bindingType: 'sampler',\n  };\n}\n\nfunction deserializeTextureBindingNode(\n  data: SerializedTextureBindingNode,\n  baseBinding: BindingNodeBaseData\n): blueprint.TextureBindingNode | null {\n  return {\n    ...baseBinding,\n    bindingType: 'texture',\n  };\n}\n\ntype ConnectionNodeBaseData = Omit<\n  blueprint.ConnectionNodeBase,\n  'connectionType'\n>;\n\nfunction deserializeBindingNode(\n  data: SerializedBindingNode,\n  baseConnection: ConnectionNodeBaseData\n): blueprint.BindingNode | null {\n  const baseBinding: BindingNodeBaseData = {\n    ...baseConnection,\n    connectionType: 'binding',\n    group: data.group ?? 0,\n    binding: data.binding ?? 0,\n  };\n  switch (data.bindingType) {\n    case 'buffer':\n      return deserializeBufferBindingNode(data, baseBinding);\n    case 'sampler':\n      return deserializeSamplerBindingNode(data, baseBinding);\n    case 'texture':\n      return deserializeTextureBindingNode(data, baseBinding);\n    default:\n      const unknownData = data as { bindingType: string };\n      console.warn(`ignoring unknown binding type: ${unknownData.bindingType}`);\n      return null;\n  }\n}\n\nfunction deserializeConnectionNode(\n  data: SerializedConnectionNode,\n  base: NodeBaseData\n): blueprint.ConnectionNode | null {\n  const baseConnection: ConnectionNodeBaseData = {\n    ...base,\n    type: 'connection',\n    source: data.source ?? '',\n    target: data.target ?? '',\n  };\n  switch (data.connectionType) {\n    case 'binding':\n      return deserializeBindingNode(data, baseConnection);\n    case 'queue':\n      return { connectionType: 'queue', ...baseConnection };\n    default:\n      const unknownData = data as { connectionType: string };\n      console.warn(\n        `ignoring unknown connection node type: ${unknownData.connectionType}`\n      );\n      return null;\n  }\n}\n\nfunction deserializeNode(data: SerializedNode): blueprint.Node | null {\n  const base = {\n    id: data.id,\n    name: data.name ?? data.id,\n    position: data.position ?? { x: 100, y: 100 },\n  };\n\n  switch (data.type) {\n    case 'render':\n      return deserializeRenderNode(data, base);\n    case 'compute':\n      return deserializeComputeNode(data, base);\n    case 'buffer':\n      return deserializeBufferNode(data, base);\n    case 'texture':\n      return deserializeTextureNode(data, base);\n    case 'sampler':\n      return deserializeSamplerNode(data, base);\n    case 'connection':\n      return deserializeConnectionNode(data, base);\n    default:\n      const unknownData = data as { type: string };\n      console.warn(`ignoring unrecognized node type: ${unknownData.type}`);\n      return null;\n  }\n}\n\nfunction deserializeShader(data: SerializedShader): blueprint.Shader {\n  return {\n    id: data.id,\n    name: data.name ?? data.id,\n    code: data.code ?? '',\n  };\n}\n\nexport function deserializeBlueprint(\n  serialized: SerializedBlueprint\n): blueprint.Blueprint {\n  const blueprint: blueprint.Blueprint = { nodes: {}, shaders: {} };\n  for (const node of serialized.nodes) {\n    const deserialized = deserializeNode(node);\n    if (deserialized !== null) {\n      blueprint.nodes[deserialized.id] = deserialized;\n    }\n  }\n  for (const shader of serialized.shaders) {\n    blueprint.shaders[shader.id] = deserializeShader(shader);\n  }\n  return blueprint;\n}\n\ninterface SerializationOptions {\n  serializeBlobs?: boolean;\n}\n\ntype SerializedNodeBaseData = Omit<SerializedNodeBase, 'type'>;\n\nfunction serializeRenderNode(\n  node: blueprint.RenderNode,\n  base: SerializedNodeBaseData\n): SerializedRenderNode {\n  return {\n    ...base,\n    type: 'render',\n    vertexShader: node.vertexShader,\n    vertexEntryPoint: node.vertexEntryPoint,\n    fragmentShader: node.fragmentShader,\n    fragmentEntryPoint: node.fragmentEntryPoint,\n    topology: node.topology,\n    indexed: node.indexed,\n    numVertices: node.numVertices,\n    numInstances: node.numInstances,\n    clear: node.clear,\n    clearColor: node.clearColor,\n    depthTest: node.depthTest,\n  };\n}\n\nfunction serializeComputeNode(\n  node: blueprint.ComputeNode,\n  base: SerializedNodeBaseData\n): SerializedComputeNode {\n  return {\n    ...base,\n    type: 'compute',\n    shader: node.shader,\n    entryPoint: node.entryPoint,\n    dispatchSize: { ...node.dispatchSize },\n  };\n}\n\nfunction serializeBufferNode(\n  node: blueprint.BufferNode,\n  base: SerializedNodeBaseData\n): SerializedBufferNode {\n  return {\n    ...base,\n    type: 'buffer',\n    size: node.size,\n    init: node.init,\n  };\n}\n\nasync function serializeTextureNode(\n  node: blueprint.TextureNode,\n  base: SerializedNodeBaseData,\n  options?: SerializationOptions\n): Promise<SerializedTextureNode> {\n  let imageData: Blob | string | null = null;\n  if (node.imageData instanceof Blob) {\n    if (options?.serializeBlobs) {\n      imageData = fromByteArray(\n        new Uint8Array(await node.imageData.arrayBuffer())\n      );\n    } else {\n      imageData = node.imageData;\n    }\n  }\n\n  return {\n    ...base,\n    type: 'texture',\n    imageData,\n    size: node.size,\n    format: node.format,\n    mipLevelCount: node.mipLevelCount,\n    sampleCount: node.sampleCount,\n  };\n}\n\nfunction serializeSamplerNode(\n  node: blueprint.SamplerNode,\n  base: SerializedNodeBaseData\n): SerializedSamplerNode {\n  return {\n    ...base,\n    type: 'sampler',\n  };\n}\n\ntype SerializedBindingBaseData = Omit<SerializedBindingNodeBase, 'bindingType'>;\n\nfunction serializeBufferBindingNode(\n  node: blueprint.BufferBindingNode,\n  baseBinding: SerializedBindingBaseData\n): SerializedBufferBindingNode {\n  return {\n    ...baseBinding,\n    bindingType: 'buffer',\n    storageType: node.storageType,\n  };\n}\n\nfunction serializeTextureBindingNode(\n  node: blueprint.TextureBindingNode,\n  baseBinding: SerializedBindingBaseData\n): SerializedTextureBindingNode {\n  return {\n    ...baseBinding,\n    bindingType: 'texture',\n  };\n}\n\nfunction serializeSamplerBindingNode(\n  node: blueprint.SamplerBindingNode,\n  baseBinding: SerializedBindingBaseData\n): SerializedSamplerBindingNode {\n  return {\n    ...baseBinding,\n    bindingType: 'sampler',\n  };\n}\n\ntype SerializedConnectionBaseData = Omit<\n  SerializedConnectionNodeBase,\n  'connectionType'\n>;\n\nfunction serializeBindingNode(\n  node: blueprint.BindingNode,\n  baseConnection: SerializedConnectionBaseData\n): SerializedBindingNode {\n  const baseBinding: SerializedBindingBaseData = {\n    ...baseConnection,\n    connectionType: 'binding',\n    group: node.group,\n    binding: node.binding,\n  };\n  switch (node.bindingType) {\n    case 'buffer':\n      return serializeBufferBindingNode(node, baseBinding);\n    case 'texture':\n      return serializeTextureBindingNode(node, baseBinding);\n    case 'sampler':\n      return serializeSamplerBindingNode(node, baseBinding);\n  }\n}\n\nfunction serializeConnectionNode(\n  node: blueprint.ConnectionNode,\n  base: SerializedNodeBaseData\n): SerializedConnectionNode {\n  const baseConnection: SerializedConnectionBaseData = {\n    ...base,\n    type: 'connection',\n    source: node.source,\n    target: node.target,\n  };\n  switch (node.connectionType) {\n    case 'binding':\n      return serializeBindingNode(node, baseConnection);\n    case 'queue':\n      return { ...baseConnection, connectionType: 'queue' };\n  }\n}\n\nasync function serializeNode(\n  node: blueprint.Node,\n  options?: SerializationOptions\n): Promise<SerializedNode> {\n  const base: SerializedNodeBaseData = {\n    id: node.id,\n    name: node.name,\n    position: node.position,\n  };\n\n  switch (node.type) {\n    case 'render':\n      return serializeRenderNode(node, base);\n    case 'compute':\n      return serializeComputeNode(node, base);\n    case 'buffer':\n      return serializeBufferNode(node, base);\n    case 'texture':\n      return serializeTextureNode(node, base, options);\n    case 'sampler':\n      return serializeSamplerNode(node, base);\n    case 'connection':\n      return serializeConnectionNode(node, base);\n  }\n}\n\nfunction serializeShader(shader: blueprint.Shader): SerializedShader {\n  return {\n    id: shader.id,\n    name: shader.name,\n    code: shader.code,\n  };\n}\n\nexport async function serializeBlueprint(\n  blueprint: blueprint.Blueprint,\n  options?: SerializationOptions\n): Promise<SerializedBlueprint> {\n  const nodes = await Promise.all(\n    Array.from(Object.values(blueprint.nodes)).map(\n      async node => await serializeNode(node, options)\n    )\n  );\n  const shaders = Array.from(Object.values(blueprint.shaders)).map(shader =>\n    serializeShader(shader)\n  );\n  return { version: 1, nodes, shaders };\n}\n","function doCopy<T>(value: T, traversed: Set<any>): T {\n  if (Array.isArray(value)) {\n    if (traversed.has(value)) {\n      throw new Error('cycle detected in deep copy');\n    }\n    traversed.add(value);\n    return value.map(x => doCopy(x, traversed)) as any;\n  }\n\n  if (value instanceof Blob) {\n    return value;\n  }\n\n  if (typeof value === 'object' && value !== null) {\n    if (traversed.has(value)) {\n      throw new Error('cycle detected in deep copy');\n    }\n    traversed.add(value);\n\n    const copy: Record<string, any> = {};\n    for (const [k, v] of Object.entries(value)) {\n      copy[k] = doCopy(v, traversed);\n    }\n    return copy as T;\n  }\n\n  if (value === null || value === undefined) {\n    return value;\n  }\n\n  if (\n    typeof value === 'number' ||\n    typeof value === 'string' ||\n    typeof value === 'boolean'\n  ) {\n    return value;\n  }\n\n  throw new Error('value not deep-copyable');\n}\n\nexport function deepCopy<T extends Record<string, any>>(value: T): T {\n  return doCopy(value, new Set());\n}\n\nexport function deepEquals<T extends Record<string, any>>(a: T, b: T): boolean {\n  if (Array.isArray(a)) {\n    if (!Array.isArray(b) || a.length !== b.length) {\n      return false;\n    }\n    return a.every((x, i) => deepEquals(x, b[i]));\n  }\n\n  if (a instanceof Blob || b instanceof Blob) {\n    return a === b;\n  }\n\n  if (typeof a === 'object' && a !== null) {\n    if (typeof b !== 'object' || b === null) {\n      return false;\n    }\n    return (\n      Object.keys(a).length === Object.keys(b).length &&\n      Object.keys(a).every(k => deepEquals(a[k], b[k]))\n    );\n  }\n\n  return a === b;\n}\n\n// Awaits all values on an object, and returns a new object with the same keys\n// but all promises resolved.\nexport async function objectPromiseAll(object: Record<string, any>) {\n  return Object.fromEntries(\n    await Promise.all(\n      Array.from(Object.entries(object)).map(async ([key, value]) => [\n        key,\n        await value,\n      ])\n    )\n  );\n}\n\nexport function deepUpdate(target: any, source: any): any {\n  function isDict(x: any): x is Record<string, any> {\n    return typeof x === 'object' && x !== null && x.constructor === Object;\n  }\n  for (const [key, value] of Object.entries(source)) {\n    if (!target.hasOwnProperty(key)) {\n      if (isDict(value) || Array.isArray(value)) {\n        target[key] = deepCopy(value);\n      } else {\n        target[key] = value;\n      }\n    } else if (isDict(value) && isDict(target[key])) {\n      deepUpdate(target[key], value);\n    } else if (isDict(value) || Array.isArray(value)) {\n      target[key] = deepCopy(value);\n    } else {\n      target[key] = value;\n    }\n  }\n  return target;\n}\n\nexport type DeepPartial<T> = {\n  [K in keyof T]?: T[K] extends Array<infer U>\n    ? Array<DeepPartial<U>>\n    : DeepPartial<T[K]>;\n};\n","const REACQUIRE_ON_LOST_DELAY_MS = 1000;\n\ntype AcquiredHandler = (() => void) | (() => Promise<void>);\ntype LostHandler = (() => void) | (() => Promise<void>);\n\nexport class Gpu {\n  private adapter_: null | GPUAdapter;\n  private device_: null | GPUDevice;\n  private lost_: boolean;\n  private pendingAcquisition_: null | Promise<void>;\n\n  onAcquired: null | AcquiredHandler;\n  onLost: null | LostHandler;\n\n  constructor() {\n    this.adapter_ = null;\n    this.device_ = null;\n    this.lost_ = false;\n    this.pendingAcquisition_ = null;\n    this.onAcquired = null;\n    this.onLost = null;\n    this.acquire();\n  }\n\n  get isAcquired() {\n    return this.adapter_ !== null;\n  }\n  get isLost() {\n    return !this.isAcquired;\n  }\n  get adapter() {\n    return this.adapter_;\n  }\n  get device() {\n    return this.device_;\n  }\n\n  acquire = async () => {\n    if (this.pendingAcquisition_ === null) {\n      this.pendingAcquisition_ = this.acquireInternal_();\n    }\n    return this.pendingAcquisition_;\n  };\n\n  release = () => {\n    if (!this.isAcquired) {\n      throw new Error('not acquired');\n    }\n\n    this.adapter_ = null;\n    this.device_ = null;\n  };\n\n  async acquireInternal_() {\n    if (this.isAcquired) {\n      throw new Error('already acquired.');\n    }\n\n    const adapter = await navigator.gpu.requestAdapter();\n    if (!adapter) {\n      throw new Error('no webgpu adapter available');\n    }\n\n    try {\n      const device = await adapter.requestDevice();\n      if (!device) {\n        throw new Error('no webgpu device available');\n      }\n      this.device_ = device;\n    } catch (e) {\n      console.log(e);\n    }\n\n    this.pendingAcquisition_ = null;\n    this.adapter_ = adapter;\n    this.device_!.lost.then(this.onLost_);\n    if (this.onAcquired !== null) {\n      await this.onAcquired();\n    }\n  }\n\n  onLost_ = async () => {\n    console.warn('Lost GPU. Reacquiring after short delay...');\n\n    this.adapter_ = null;\n    this.device_ = null;\n    if (this.onLost != null) {\n      await this.onLost();\n    }\n    await new Promise(resolve =>\n      setTimeout(resolve, REACQUIRE_ON_LOST_DELAY_MS)\n    );\n  };\n}\n","import { ID } from '../../blueprint/blueprint';\nimport { ProgramMap } from './program_map';\n\ninterface ResourceDescriptor {\n  id: ID;\n}\n\nexport interface Resource {\n  dispose: () => void;\n}\n\nexport interface ResourceCompiler<\n  DescriptorType extends ResourceDescriptor,\n  ResourceType extends Resource\n> {\n  getCurrentDescriptors(programMap: ProgramMap): Iterable<DescriptorType>;\n  needsRecompile(\n    descriptor: DescriptorType,\n    cachedValue: ResourceType,\n    programMap: ProgramMap\n  ): boolean;\n  compile(\n    descriptor: DescriptorType,\n    programMap: ProgramMap\n  ): Promise<null | ResourceType>;\n}\n\ntype Cache<ResourceType extends Resource> = Map<ID, ResourceType>;\n\ninterface PendingUpdate<ResourceType extends Resource> {\n  id: string;\n  update: Promise<null | ResourceType>;\n}\n\nexport class ResourceCache<\n  DescriptorType extends ResourceDescriptor,\n  ResourceType extends Resource\n> {\n  private readonly compiler_: ResourceCompiler<DescriptorType, ResourceType>;\n  private cache_: Cache<ResourceType>;\n\n  constructor(compiler: ResourceCompiler<DescriptorType, ResourceType>) {\n    this.compiler_ = compiler;\n    this.cache_ = new Map();\n  }\n\n  keys() {\n    return this.cache_.keys();\n  }\n\n  entries() {\n    return this.cache_.entries();\n  }\n\n  get(id: ID): null | ResourceType {\n    return this.cache_.get(id) ?? null;\n  }\n\n  replace(newCache: ResourceCache<DescriptorType, ResourceType>) {\n    for (const [id, resource] of this.cache_.entries()) {\n      const newResource = newCache.get(id);\n      if (!newResource) {\n        resource.dispose();\n      }\n    }\n    this.cache_ = newCache.cache_;\n  }\n\n  dispose() {\n    for (const resource of Object.values(this.cache_)) {\n      resource.dispose();\n    }\n  }\n\n  async compile(\n    programMap: ProgramMap\n  ): Promise<ResourceCache<DescriptorType, ResourceType>> {\n    const newCache = new ResourceCache<DescriptorType, ResourceType>(\n      this.compiler_\n    );\n    const pendingUpdates: PendingUpdate<ResourceType>[] = [];\n    for (const descriptor of this.compiler_.getCurrentDescriptors(programMap)) {\n      const entry = this.cache_.get(descriptor.id);\n      if (\n        entry &&\n        !this.compiler_.needsRecompile(descriptor, entry, programMap)\n      ) {\n        newCache.cache_.set(descriptor.id, entry);\n      } else {\n        pendingUpdates.push({\n          id: descriptor.id,\n          update: this.compiler_.compile(descriptor, programMap),\n        });\n      }\n    }\n\n    for (const { id, update } of pendingUpdates) {\n      const newResource = await update;\n      if (newResource !== null) {\n        newCache.cache_.set(id, newResource);\n      }\n    }\n    return newCache;\n  }\n}\n","import { BufferInitializer, BufferNode } from '../../blueprint/blueprint';\nimport { Resource, ResourceCache } from './resource_cache';\nimport { ProgramMap } from './program_map';\n\nfunction fillRandomUint32Array(data: Uint32Array) {\n  for (let offset = 0; offset < data.byteLength; offset += 65536) {\n    const size = Math.min(65536, data.byteLength - offset);\n    const view = new Uint32Array(data.buffer, offset, size / 4);\n    crypto.getRandomValues(view);\n  }\n}\n\nclass BufferResource implements Resource {\n  private readonly size_: number;\n  private readonly init_: BufferInitializer;\n  private readonly usage_: GPUBufferUsageFlags;\n  private readonly buffer_: GPUBuffer;\n\n  constructor(\n    size: number,\n    init: BufferInitializer,\n    usage: GPUBufferUsageFlags,\n    buffer: GPUBuffer\n  ) {\n    this.size_ = size;\n    this.init_ = init;\n    this.usage_ = usage;\n    this.buffer_ = buffer;\n  }\n\n  get size() {\n    return this.size_;\n  }\n  get init() {\n    return this.init_;\n  }\n  get usage() {\n    return this.usage_;\n  }\n  get buffer() {\n    return this.buffer_;\n  }\n\n  dispose() {\n    this.buffer_.destroy();\n  }\n}\n\nclass BufferCompiler {\n  private readonly device_: GPUDevice;\n\n  constructor(device: GPUDevice) {\n    this.device_ = device;\n  }\n\n  getCurrentDescriptors(programMap: ProgramMap): Iterable<BufferNode> {\n    return programMap.buffers.values();\n  }\n\n  needsRecompile(\n    newDescriptor: BufferNode,\n    buffer: BufferResource,\n    programMap: ProgramMap\n  ) {\n    return (\n      newDescriptor.size !== buffer.size ||\n      newDescriptor.init !== buffer.init ||\n      programMap.bufferUsage.get(newDescriptor.id) !== buffer.usage\n    );\n  }\n\n  async compile(descriptor: BufferNode, programMap: ProgramMap) {\n    const usage = programMap.bufferUsage.get(descriptor.id);\n    if (!usage) {\n      // No need to do anything, this buffer isn't used by anyone.\n      return null;\n    }\n\n    const mappedAtCreation = descriptor.init !== 'zero';\n    const buffer = this.device_.createBuffer({\n      size: descriptor.size,\n      usage,\n      mappedAtCreation,\n    });\n    if (!buffer) {\n      return null;\n    }\n\n    if (mappedAtCreation) {\n      const data = buffer.getMappedRange(0, descriptor.size);\n      const uints = new Uint32Array(data);\n      const floats = new Float32Array(data);\n      fillRandomUint32Array(uints);\n      if (descriptor.init === 'random-floats') {\n        uints.forEach((x, i) => {\n          floats[i] = x / 2 ** 31 - 1;\n        });\n      }\n      buffer.unmap();\n    }\n\n    return new BufferResource(\n      descriptor.size,\n      descriptor.init ?? 'zero',\n      usage,\n      buffer\n    );\n  }\n}\n\nexport type BufferCache = ResourceCache<BufferNode, BufferResource>;\n\nexport function createBufferCache(device: GPUDevice): BufferCache {\n  return new ResourceCache<BufferNode, BufferResource>(\n    new BufferCompiler(device)\n  );\n}\n","import { SamplerNode } from '../../blueprint/blueprint';\nimport { Resource, ResourceCache } from './resource_cache';\nimport { ProgramMap } from './program_map';\n\nclass SamplerResource implements Resource {\n  private readonly sampler_: GPUSampler;\n\n  constructor(sampler: GPUSampler) {\n    this.sampler_ = sampler;\n  }\n\n  get sampler() {\n    return this.sampler_;\n  }\n\n  dispose() {}\n}\n\nexport class SamplerCompiler {\n  private readonly device_: GPUDevice;\n\n  constructor(device: GPUDevice) {\n    this.device_ = device;\n  }\n\n  getCurrentDescriptors(programMap: ProgramMap): Iterable<SamplerNode> {\n    return programMap.samplers.values();\n  }\n\n  needsRecompile(\n    newDescriptor: SamplerNode,\n    sampler: SamplerResource,\n    programMap: ProgramMap\n  ) {\n    return false;\n  }\n\n  async compile(descriptor: SamplerNode, programMap: ProgramMap) {\n    return new SamplerResource(this.device_.createSampler());\n  }\n}\n\nexport type SamplerCache = ResourceCache<SamplerNode, SamplerResource>;\n\nexport function createSamplerCache(device: GPUDevice): SamplerCache {\n  return new ResourceCache<SamplerNode, SamplerResource>(\n    new SamplerCompiler(device)\n  );\n}\n","import { UniformLayout } from './uniform_layout';\n\nexport const BUILTIN_UNIFORMS_WGSL = `// All shader sources are prefixed with the definitions below, providing a\n// set of builtin uniform inputs which are updated by the application before\n// each frame iteration.\n[[block]] struct BuiltinUniforms {\n  // The time in seconds since the application loaded.\n  time: f32;\n\n  // The time in seconds since the last frame iteration. Zero for the first\n  // frame.\n  timeDelta: f32;\n\n  // The count of the current frame. The first frame is frame 0.\n  frame: u32;\n\n  // The resolution in pixels of the main output texture displayed by the app.\n  [[align(16)]] resolution: vec2<u32>;\n};\n\n// All builtin uniforms are accessible to all shaders through this global.\n[[group(0), binding(0)]] var<uniform> builtinUniforms: BuiltinUniforms;\n`;\n\nexport const BUILTIN_UNIFORMS: UniformLayout = {\n  fields: [\n    { name: 'time', type: 'f32' },\n    { name: 'timeDelta', type: 'f32' },\n    { name: 'frame', type: 'u32' },\n    { name: 'resolution', type: { vectorType: 'vec2', componentType: 'u32' } },\n  ],\n};\n","import { Shader } from '../../blueprint/blueprint';\nimport { BUILTIN_UNIFORMS_WGSL } from '../builtin_uniforms';\nimport { Resource, ResourceCache } from './resource_cache';\nimport { ProgramMap } from './program_map';\n\nconst BUILTIN_WGSL_NUM_LINES = BUILTIN_UNIFORMS_WGSL.split(/\\r\\n|\\r|\\n/).length;\n\nexport type ShaderCompilationMessageType = 'info' | 'warning' | 'error';\n\nexport interface ShaderCompilationMessage {\n  message: string;\n  type: ShaderCompilationMessageType;\n  lineNum: number;\n  linePos: number;\n  offset: number;\n  length: number;\n}\n\nexport interface ShaderCompilationResult {\n  module: null | GPUShaderModule;\n  messages: ShaderCompilationMessage[];\n}\n\nclass ShaderResource implements Resource {\n  private readonly code_: string;\n  private readonly module_: null | GPUShaderModule;\n  private readonly messages_: ShaderCompilationMessage[];\n\n  constructor(\n    code: string,\n    module: null | GPUShaderModule,\n    messages: ShaderCompilationMessage[]\n  ) {\n    this.code_ = code;\n    this.module_ = module;\n    this.messages_ = messages;\n  }\n\n  get code() {\n    return this.code_;\n  }\n  get module() {\n    return this.module_;\n  }\n  get messages() {\n    return this.messages_;\n  }\n\n  dispose() {}\n}\n\nexport class ShaderCompiler {\n  private readonly device_: GPUDevice;\n\n  constructor(device: GPUDevice) {\n    this.device_ = device;\n  }\n\n  getCurrentDescriptors(programMap: ProgramMap): Iterable<Shader> {\n    return programMap.shaders.values();\n  }\n\n  needsRecompile(\n    newDescriptor: Shader,\n    shader: ShaderResource,\n    programMap: ProgramMap\n  ) {\n    return newDescriptor.code !== shader.code;\n  }\n\n  async compile(descriptor: Shader, programMap: ProgramMap) {\n    const module = this.device_.createShaderModule({\n      code: BUILTIN_UNIFORMS_WGSL + descriptor.code,\n    });\n    const info = await module.compilationInfo();\n    let failed = false;\n    const messages = [];\n    for (const message of info.messages) {\n      if (message.type === 'error') {\n        failed = true;\n      }\n      messages.push({\n        message: message.message,\n        type: message.type as ShaderCompilationMessageType,\n        lineNum: message.lineNum - BUILTIN_WGSL_NUM_LINES,\n        linePos: message.linePos,\n        offset: message.offset,\n        length: message.length,\n      });\n    }\n\n    return new ShaderResource(\n      descriptor.code,\n      failed ? null : module,\n      messages\n    );\n  }\n}\n\nexport type ShaderCache = ResourceCache<Shader, ShaderResource>;\n\nexport function createShaderCache(device: GPUDevice): ShaderCache {\n  return new ResourceCache<Shader, ShaderResource>(new ShaderCompiler(device));\n}\n","import { TextureNode } from '../../blueprint/blueprint';\nimport { Resource, ResourceCache } from './resource_cache';\nimport { ProgramMap } from './program_map';\n\nclass TextureResource implements Resource {\n  private readonly imageData_: Blob;\n  private readonly bitmap_: ImageBitmap;\n  private readonly texture_: GPUTexture;\n\n  constructor(imageData: Blob, bitmap: ImageBitmap, texture: GPUTexture) {\n    this.imageData_ = imageData;\n    this.bitmap_ = bitmap;\n    this.texture_ = texture;\n  }\n\n  get imageData() {\n    return this.imageData_;\n  }\n\n  get bitmap() {\n    return this.bitmap_;\n  }\n\n  get texture() {\n    return this.texture_;\n  }\n\n  dispose() {\n    this.texture_.destroy();\n  }\n}\n\nexport class TextureCompiler {\n  private readonly device_: GPUDevice;\n\n  constructor(device: GPUDevice) {\n    this.device_ = device;\n  }\n\n  getCurrentDescriptors(programMap: ProgramMap): Iterable<TextureNode> {\n    return programMap.textures.values();\n  }\n\n  needsRecompile(\n    newDescriptor: TextureNode,\n    texture: TextureResource,\n    programMap: ProgramMap\n  ) {\n    return newDescriptor.imageData !== texture.imageData;\n  }\n\n  async compile(descriptor: TextureNode, programMap: ProgramMap) {\n    if (!descriptor.imageData) {\n      return null;\n    }\n\n    const bitmap = await createImageBitmap(descriptor.imageData);\n    const size = { width: bitmap.width, height: bitmap.height };\n    const texture = this.device_.createTexture({\n      size,\n      format: 'rgba8unorm',\n      usage:\n        GPUTextureUsage.TEXTURE_BINDING |\n        GPUTextureUsage.COPY_DST |\n        GPUTextureUsage.RENDER_ATTACHMENT,\n    });\n    this.device_.queue.copyExternalImageToTexture(\n      { source: bitmap },\n      { texture },\n      size\n    );\n    return new TextureResource(descriptor.imageData, bitmap, texture);\n  }\n}\n\nexport type TextureCache = ResourceCache<TextureNode, TextureResource>;\n\nexport function createTextureCache(device: GPUDevice): TextureCache {\n  return new ResourceCache<TextureNode, TextureResource>(\n    new TextureCompiler(device)\n  );\n}\n","import { deepCopy } from '../../base/util';\nimport {\n  Blueprint,\n  BindingNode,\n  BufferBindingNode,\n  BufferNode,\n  ComputeNode,\n  NodeID,\n  RenderNode,\n  SamplerBindingNode,\n  SamplerNode,\n  Shader,\n  TextureBindingNode,\n  TextureNode,\n} from '../../blueprint/blueprint';\n\n// TODO: This should be devised dynamically from device limits.\nconst kMaxBindGroups = 4;\n\nexport type PassNode = RenderNode | ComputeNode;\n\nexport type ShaderMap = Map<NodeID, Shader>;\nexport type BufferMap = Map<NodeID, BufferNode>;\nexport type TextureMap = Map<NodeID, TextureNode>;\nexport type SamplerMap = Map<NodeID, SamplerNode>;\nexport type PassMap = Map<NodeID, PassNode>;\n\nexport type BindableNode = BufferNode | TextureNode | SamplerNode;\n\nexport interface BindGroupEntry {\n  layoutEntry: GPUBindGroupLayoutEntry;\n  node: BindableNode;\n}\n\nexport type BindGroup = Map<number, BindGroupEntry>;\nexport type BindingsMap = Map<NodeID, BindGroup[]>;\n\nexport type PassType = 'render' | 'compute';\n\nexport type BufferUsageMap = Map<NodeID, GPUBufferUsageFlags>;\nexport type TextureUsageMap = Map<NodeID, GPUTextureUsageFlags>;\n\ninterface QueueDeps {\n  // Maps each pass ID to the set of pass IDs which depend upon it.\n  incoming: Map<NodeID, Set<NodeID>>;\n\n  // Maps each pass ID to the set of pass IDs on which it depends.\n  outgoing: Map<NodeID, Set<NodeID>>;\n}\n\nexport class ProgramMap {\n  public readonly blueprint: Blueprint;\n  public readonly shaders: ShaderMap;\n  public readonly buffers: BufferMap;\n  public readonly textures: TextureMap;\n  public readonly samplers: SamplerMap;\n  public readonly passes: PassMap;\n  public readonly bindings: BindingsMap;\n  public readonly bufferUsage: BufferUsageMap;\n  public readonly textureUsage: TextureUsageMap;\n  public readonly passOrder: NodeID[];\n\n  constructor(blueprint: Blueprint) {\n    this.blueprint = deepCopy(blueprint);\n    this.shaders = new Map(\n      Object.values(this.blueprint.shaders).map(s => [s.id, s])\n    );\n    this.buffers = new Map();\n    this.textures = new Map();\n    this.samplers = new Map();\n    this.passes = new Map();\n    this.bindings = new Map();\n    this.bufferUsage = new Map();\n    this.textureUsage = new Map();\n    this.passOrder = [];\n    this.populate_();\n  }\n\n  populate_() {\n    const bindingNodes = [];\n    const queueDeps = { incoming: new Map(), outgoing: new Map() };\n    for (const [id, node] of Object.entries(this.blueprint.nodes)) {\n      switch (node.type) {\n        case 'buffer':\n          this.buffers.set(id, node);\n          break;\n\n        case 'texture':\n          this.textures.set(id, node);\n          break;\n\n        case 'sampler':\n          this.samplers.set(id, node);\n          break;\n\n        case 'connection':\n          switch (node.connectionType) {\n            case 'binding':\n              bindingNodes.push(node);\n              break;\n\n            case 'queue':\n              const incoming = queueDeps.incoming.get(node.target) ?? new Set();\n              const outgoing = queueDeps.outgoing.get(node.source) ?? new Set();\n              incoming.add(node.source);\n              outgoing.add(node.target);\n              queueDeps.incoming.set(node.target, incoming);\n              queueDeps.outgoing.set(node.source, outgoing);\n              break;\n          }\n          break;\n\n        case 'compute':\n          this.passes.set(id, node);\n          break;\n\n        case 'render':\n          this.passes.set(id, node);\n          break;\n\n        default:\n          break;\n      }\n    }\n\n    this.populateBindings_(bindingNodes);\n    this.computePassOrder_(queueDeps);\n  }\n\n  populateBindings_(bindingNodes: BindingNode[]) {\n    for (const node of bindingNodes) {\n      const pass = this.passes.get(node.target);\n      if (!pass) {\n        console.warn(`ignoring unknown pass: ${node.target}`);\n        continue;\n      }\n      if (node.group >= kMaxBindGroups) {\n        console.warn(`invalid bind group ${node.group}`);\n        continue;\n      }\n      let groups = this.bindings.get(node.target);\n      if (!groups) {\n        groups = [];\n        this.bindings.set(node.target, groups);\n      }\n\n      const bindingNode = this.blueprint.nodes[node.source];\n      if (!bindingNode || bindingNode.type !== node.bindingType) {\n        console.warn(`ignoring unknown binding source ${node.source}`);\n        continue;\n      }\n      switch (node.bindingType) {\n        case 'buffer':\n          const buffer = this.buffers.get(bindingNode.id);\n          if (!buffer) {\n            console.warn(`ignoring unknown buffer: ${node.source}`);\n            continue;\n          }\n          this.compileBufferBinding_(pass.type, groups, buffer, node);\n          break;\n\n        case 'texture':\n          const texture = this.textures.get(bindingNode.id);\n          if (!texture) {\n            console.warn(`ignoring unknown texture: ${node.source}`);\n            continue;\n          }\n          this.compileTextureBinding_(pass.type, groups, texture, node);\n          break;\n\n        case 'sampler':\n          const sampler = this.samplers.get(bindingNode.id);\n          if (!sampler) {\n            console.warn(`ignoring unknown sampler: ${node.source}`);\n            continue;\n          }\n          this.compileSamplerBinding_(pass.type, groups, sampler, node);\n          break;\n      }\n    }\n  }\n\n  computePassOrder_(queueDeps: QueueDeps) {\n    // The initial working set is the set of all passes with no incoming queue\n    // dependencies.\n    const startNodes: Set<NodeID> = new Set(this.passes.keys());\n    for (const target of queueDeps.incoming.keys()) {\n      startNodes.delete(target);\n    }\n\n    // Iteratively append nodes as their dependencies are met.\n    let thisPhase = Array.from(startNodes);\n    while (thisPhase.length !== 0) {\n      this.passOrder.push(...thisPhase);\n      const nextPhase: NodeID[] = [];\n      for (const added of thisPhase) {\n        const targets = queueDeps.outgoing.get(added);\n        if (!targets) {\n          continue;\n        }\n        for (const target of targets.values()) {\n          const incomingDeps = queueDeps.incoming.get(target);\n          if (incomingDeps) {\n            incomingDeps.delete(added);\n            if (incomingDeps.size === 0) {\n              nextPhase.push(target);\n            }\n          }\n        }\n      }\n      thisPhase = nextPhase;\n    }\n  }\n\n  compileBufferBinding_(\n    passType: PassType,\n    groups: BindGroup[],\n    buffer: BufferNode,\n    binding: BufferBindingNode\n  ) {\n    let newUsage = 0;\n    let bufferType: GPUBufferBindingType;\n    switch (binding.storageType) {\n      case 'storage-read':\n        newUsage = GPUBufferUsage.STORAGE;\n        bufferType = 'read-only-storage';\n        break;\n\n      case 'storage':\n        newUsage = GPUBufferUsage.STORAGE;\n        bufferType = 'storage';\n        break;\n\n      case 'uniform':\n        newUsage = GPUBufferUsage.UNIFORM;\n        bufferType = 'uniform';\n        break;\n    }\n\n    this.bufferUsage.set(\n      buffer.id,\n      (this.bufferUsage.get(buffer.id) ?? 0) | newUsage\n    );\n\n    const layoutEntry: GPUBindGroupLayoutEntry = {\n      binding: binding.binding,\n      visibility: visibilityForPass(passType),\n      buffer: { type: bufferType },\n    };\n\n    addBindGroupEntry(groups, binding.group, layoutEntry, buffer);\n  }\n\n  compileTextureBinding_(\n    passType: PassType,\n    groups: BindGroup[],\n    texture: TextureNode,\n    binding: TextureBindingNode\n  ) {\n    const layoutEntry: GPUBindGroupLayoutEntry = {\n      binding: binding.binding,\n      visibility: visibilityForPass(passType),\n      texture: {},\n    };\n\n    addBindGroupEntry(groups, binding.group, layoutEntry, texture);\n  }\n\n  compileSamplerBinding_(\n    passType: PassType,\n    groups: BindGroup[],\n    sampler: SamplerNode,\n    binding: SamplerBindingNode\n  ) {\n    const layoutEntry: GPUBindGroupLayoutEntry = {\n      binding: binding.binding,\n      visibility: visibilityForPass(passType),\n      sampler: {},\n    };\n\n    addBindGroupEntry(groups, binding.group, layoutEntry, sampler);\n  }\n}\n\nfunction addBindGroupEntry(\n  groups: BindGroup[],\n  group: number,\n  layoutEntry: GPUBindGroupLayoutEntry,\n  node: BindableNode\n) {\n  while (group >= groups.length) {\n    groups.push(new Map());\n  }\n  const binding = layoutEntry.binding;\n  const groupBindings = groups[group];\n  if (groupBindings.has(binding)) {\n    console.warn(`ignoring duplicate binding (${group}, ${binding})`);\n    return;\n  }\n  groupBindings.set(binding, { layoutEntry, node });\n}\n\nfunction visibilityForPass(passType: PassType): GPUShaderStageFlags {\n  if (passType === 'render') {\n    return GPUShaderStage.VERTEX | GPUShaderStage.FRAGMENT;\n  }\n  return GPUShaderStage.COMPUTE;\n}\n","import { objectPromiseAll } from '../../base/util';\nimport { Blueprint } from '../../blueprint/blueprint';\nimport { BufferCache, createBufferCache } from './buffer_cache';\nimport { SamplerCache, createSamplerCache } from './sampler_cache';\nimport { ShaderCache, createShaderCache } from './shader_cache';\nimport { TextureCache, createTextureCache } from './texture_cache';\nimport { ProgramMap } from './program_map';\n\ninterface Caches {\n  readonly shaders: ShaderCache;\n  readonly buffers: BufferCache;\n  readonly textures: TextureCache;\n  readonly samplers: SamplerCache;\n}\n\nexport class ResourceBundle {\n  private device_: GPUDevice;\n  private lastCompile_: null | Promise<Caches>;\n  private caches_: Caches;\n  private programMap_: null | ProgramMap;\n\n  constructor(device: GPUDevice) {\n    this.device_ = device;\n    this.lastCompile_ = null;\n    this.caches_ = {\n      shaders: createShaderCache(device),\n      buffers: createBufferCache(device),\n      textures: createTextureCache(device),\n      samplers: createSamplerCache(device),\n    };\n    this.programMap_ = null;\n  }\n\n  dispose() {\n    this.caches_.shaders.dispose();\n    this.caches_.buffers.dispose();\n    this.caches_.textures.dispose();\n    this.caches_.samplers.dispose();\n  }\n\n  get programMap() {\n    return this.programMap_;\n  }\n\n  get shaders() {\n    return this.caches_.shaders;\n  }\n  get buffers() {\n    return this.caches_.buffers;\n  }\n  get textures() {\n    return this.caches_.textures;\n  }\n  get samplers() {\n    return this.caches_.samplers;\n  }\n\n  async update(blueprint: Blueprint) {\n    const programMap = new ProgramMap(blueprint);\n    const thisCompile = this.doCompile_(programMap);\n    this.lastCompile_ = thisCompile;\n    const newResources = await thisCompile;\n    if (this.lastCompile_ !== thisCompile) {\n      await this.lastCompile_!;\n      return;\n    }\n    this.programMap_ = programMap;\n    this.caches_.shaders.replace(newResources.shaders);\n    this.caches_.buffers.replace(newResources.buffers);\n    this.caches_.textures.replace(newResources.textures);\n    this.caches_.samplers.replace(newResources.samplers);\n  }\n\n  async doCompile_(programMap: ProgramMap): Promise<Caches> {\n    const shaders = this.caches_.shaders.compile(programMap);\n    const buffers = this.caches_.buffers.compile(programMap);\n    const textures = this.caches_.textures.compile(programMap);\n    const samplers = this.caches_.samplers.compile(programMap);\n    return await objectPromiseAll({ shaders, buffers, textures, samplers });\n  }\n}\n","import { ComputeNode, RenderNode } from '../../blueprint/blueprint';\n\nexport type PassType = 'render' | 'compute';\n\nexport type LinkedPass = LinkedRenderPass | LinkedComputePass;\n\nexport interface LinkedRenderPass {\n  type: 'render';\n  node: RenderNode;\n  bundle: GPURenderBundle;\n}\n\nexport interface LinkedComputePass {\n  type: 'compute';\n  node: ComputeNode;\n  bindGroups: GPUBindGroup[];\n  pipeline: GPUComputePipeline;\n}\n\nexport class Executable {\n  private readonly device_: GPUDevice;\n  private readonly passes_: LinkedPass[];\n  private outputDepthStencilTexture_: null | GPUTexture;\n  private outputDepthStencilTextureSize_: GPUExtent3DDict;\n\n  constructor(device: GPUDevice, passes: LinkedPass[]) {\n    this.device_ = device;\n    this.passes_ = passes;\n    this.outputDepthStencilTexture_ = null;\n    this.outputDepthStencilTextureSize_ = { width: 0, height: 0 };\n  }\n\n  run(texture: GPUTexture, { width, height }: GPUExtent3DDict) {\n    const device = this.device_;\n\n    // TODO: configurable depth/stencil state\n    if (\n      this.outputDepthStencilTexture_ === null ||\n      this.outputDepthStencilTextureSize_.width !== width ||\n      this.outputDepthStencilTextureSize_.height !== height\n    ) {\n      if (this.outputDepthStencilTexture_ !== null) {\n        this.outputDepthStencilTexture_.destroy();\n        this.outputDepthStencilTexture_ = null;\n      }\n\n      this.outputDepthStencilTexture_ = device.createTexture({\n        size: { width, height },\n        format: 'depth24plus-stencil8',\n        usage: GPUTextureUsage.RENDER_ATTACHMENT,\n      });\n      this.outputDepthStencilTextureSize_ = { width, height };\n    }\n\n    device.queue.submit([this.encodeCommands_(texture)]);\n  }\n\n  encodeCommands_(texture: GPUTexture) {\n    const encoder = this.device_.createCommandEncoder();\n    for (const pass of this.passes_) {\n      switch (pass.type) {\n        case 'render':\n          this.encodeRenderCommands_(pass, encoder, texture);\n          break;\n\n        case 'compute':\n          this.encodeComputeCommands_(pass, encoder);\n          break;\n      }\n    }\n    return encoder.finish();\n  }\n\n  encodeRenderCommands_(\n    pass: LinkedRenderPass,\n    encoder: GPUCommandEncoder,\n    texture: GPUTexture\n  ) {\n    const loadValue = pass.node.clear\n      ? pass.node.clearColor ?? { r: 0, g: 0, b: 0, a: 1 }\n      : ('load' as const);\n    const depthStencilTexture = this.outputDepthStencilTexture_!;\n    const renderPass = encoder.beginRenderPass({\n      colorAttachments: [\n        {\n          view: texture.createView(),\n          loadValue,\n          storeOp: 'store' as const,\n        },\n      ],\n      depthStencilAttachment: {\n        view: depthStencilTexture.createView(),\n        depthLoadValue: pass.node.clear ? 1 : 'load',\n        depthStoreOp: 'store',\n        stencilLoadValue: 1,\n        stencilStoreOp: 'store',\n      },\n    });\n    renderPass.executeBundles([pass.bundle]);\n    renderPass.endPass();\n  }\n\n  encodeComputeCommands_(pass: LinkedComputePass, encoder: GPUCommandEncoder) {\n    const computePass = encoder.beginComputePass();\n    const dispatchSize = pass.node.dispatchSize;\n    computePass.setPipeline(pass.pipeline);\n    pass.bindGroups.forEach((group, i) => {\n      computePass.setBindGroup(i, group);\n    });\n    computePass.dispatch(\n      Math.max(0, dispatchSize.x),\n      Math.max(0, dispatchSize.y),\n      Math.max(0, dispatchSize.z)\n    );\n    computePass.endPass();\n  }\n}\n","import {\n  Blueprint,\n  ComputeNode,\n  NodeID,\n  RenderNode,\n} from '../../blueprint/blueprint';\nimport { ResourceBundle } from './resource_bundle';\nimport {\n  LinkedComputePass,\n  LinkedPass,\n  LinkedRenderPass,\n  Executable,\n} from './executable';\nimport { BindGroupEntry, PassNode } from './program_map';\n\ninterface LinkedBindings {\n  pipelineLayout: GPUPipelineLayout;\n  bindGroups: GPUBindGroup[];\n}\n\nfunction getResourceForBinding(\n  entry: BindGroupEntry,\n  resources: ResourceBundle\n): null | GPUBindingResource {\n  const node = entry.node;\n  switch (node.type) {\n    case 'buffer':\n      const buffer = resources.buffers.get(node.id);\n      if (!buffer) {\n        console.warn(`unable to bind missing buffer ${node.name}`);\n        return null;\n      }\n      return { buffer: buffer.buffer };\n\n    case 'texture':\n      const texture = resources.textures.get(node.id);\n      if (!texture) {\n        console.warn(`unable to bind missing texture ${node.name}`);\n        return null;\n      }\n      return texture.texture.createView();\n\n    case 'sampler':\n      const sampler = resources.samplers.get(node.id);\n      if (!sampler) {\n        console.warn(`unable to bind missing sampler ${node.name}`);\n        return null;\n      }\n      return sampler.sampler;\n  }\n}\n\nfunction linkBindings(\n  passId: NodeID,\n  device: GPUDevice,\n  resources: ResourceBundle,\n  visibility: GPUShaderStageFlags,\n  builtinUniforms: GPUBuffer\n): LinkedBindings {\n  const groups = resources.programMap!.bindings.get(passId) ?? [];\n  const layoutEntries: GPUBindGroupLayoutEntry[][] = [];\n  const groupEntries: GPUBindGroupEntry[][] = [];\n  for (const group of groups) {\n    const newLayoutEntries: GPUBindGroupLayoutEntry[] = [];\n    const newGroupEntries: GPUBindGroupEntry[] = [];\n    for (const entry of group.values()) {\n      const resource = getResourceForBinding(entry, resources);\n      if (!resource) {\n        continue;\n      }\n\n      newLayoutEntries.push(entry.layoutEntry);\n      newGroupEntries.push({\n        binding: entry.layoutEntry.binding,\n        resource,\n      });\n    }\n    layoutEntries.push(newLayoutEntries);\n    groupEntries.push(newGroupEntries);\n  }\n\n  if (layoutEntries.length === 0) {\n    layoutEntries.push([]);\n    groupEntries.push([]);\n  }\n\n  layoutEntries[0].unshift({\n    binding: 0,\n    visibility,\n    buffer: { type: 'uniform' },\n  });\n  groupEntries[0].unshift({\n    binding: 0,\n    resource: { buffer: builtinUniforms },\n  });\n\n  const bindGroupLayouts: GPUBindGroupLayout[] = [];\n  const bindGroups: GPUBindGroup[] = [];\n  layoutEntries.forEach((entries, i) => {\n    const layout = device.createBindGroupLayout({ entries });\n    bindGroupLayouts.push(layout);\n    bindGroups.push(\n      device.createBindGroup({\n        layout,\n        entries: groupEntries[i],\n      })\n    );\n  });\n\n  const pipelineLayout = device.createPipelineLayout({ bindGroupLayouts });\n  return { pipelineLayout, bindGroups };\n}\n\nfunction linkRenderPass(\n  device: GPUDevice,\n  id: NodeID,\n  node: RenderNode,\n  builtinUniforms: GPUBuffer,\n  outputFormat: GPUTextureFormat,\n  resources: ResourceBundle,\n  blueprint: Blueprint\n): null | LinkedRenderPass {\n  if (\n    resources.programMap === null ||\n    node.vertexShader === null ||\n    node.fragmentShader === null ||\n    node.vertexEntryPoint === null ||\n    node.fragmentEntryPoint === null\n  ) {\n    return null;\n  }\n\n  const vertex = blueprint.shaders[node.vertexShader];\n  const fragment = blueprint.shaders[node.fragmentShader];\n  if (!vertex || !fragment) {\n    return null;\n  }\n  const vertexShader = resources.shaders.get(vertex.id);\n  const fragmentShader = resources.shaders.get(fragment.id);\n  if (\n    !vertexShader ||\n    !fragmentShader ||\n    !vertexShader.module ||\n    !fragmentShader.module\n  ) {\n    return null;\n  }\n\n  const bindings = linkBindings(\n    id,\n    device,\n    resources,\n    GPUShaderStage.VERTEX | GPUShaderStage.FRAGMENT,\n    builtinUniforms\n  );\n  const topology = node.topology ?? 'triangle-list';\n  const stripIndexFormat =\n    topology === 'line-strip' || topology === 'triangle-strip'\n      ? 'uint32'\n      : undefined;\n  const pipeline = device.createRenderPipeline({\n    layout: bindings.pipelineLayout,\n    vertex: {\n      module: vertexShader.module,\n      entryPoint: node.vertexEntryPoint,\n    },\n    primitive: {\n      topology,\n      stripIndexFormat,\n      cullMode: 'none',\n    },\n    fragment: {\n      targets: [{ format: outputFormat }],\n      module: fragmentShader.module,\n      entryPoint: node.fragmentEntryPoint,\n    },\n    depthStencil: {\n      format: 'depth24plus-stencil8',\n      depthWriteEnabled: true,\n      depthCompare: node.depthTest ?? 'always',\n    },\n  });\n  const encoder = device.createRenderBundleEncoder({\n    colorFormats: [outputFormat],\n    depthStencilFormat: 'depth24plus-stencil8',\n  });\n  encoder.setPipeline(pipeline);\n  bindings.bindGroups.forEach((group, i) => {\n    if (group) {\n      encoder.setBindGroup(i, group);\n    }\n  });\n  encoder.draw(node.numVertices, node.numInstances);\n  return {\n    type: 'render',\n    node,\n    bundle: encoder.finish(),\n  };\n}\n\nfunction linkComputePass(\n  device: GPUDevice,\n  id: NodeID,\n  node: ComputeNode,\n  builtinUniforms: GPUBuffer,\n  resources: ResourceBundle,\n  blueprint: Blueprint\n): null | LinkedComputePass {\n  if (\n    resources.programMap === null ||\n    node.shader === null ||\n    node.entryPoint === null\n  ) {\n    return null;\n  }\n\n  const shaderDescriptor = blueprint.shaders[node.shader];\n  if (!shaderDescriptor) {\n    return null;\n  }\n  const shader = resources.shaders.get(shaderDescriptor.id);\n  if (!shader || !shader.module) {\n    return null;\n  }\n\n  const bindings = linkBindings(\n    id,\n    device,\n    resources,\n    GPUShaderStage.COMPUTE,\n    builtinUniforms\n  );\n  const pipeline = device.createComputePipeline({\n    layout: bindings.pipelineLayout,\n    compute: {\n      module: shader.module,\n      entryPoint: node.entryPoint,\n    },\n  });\n  return {\n    type: 'compute',\n    node,\n    bindGroups: bindings.bindGroups,\n    pipeline,\n  };\n}\n\nfunction linkPass(\n  device: GPUDevice,\n  id: NodeID,\n  node: PassNode,\n  builtinUniforms: GPUBuffer,\n  outputFormat: GPUTextureFormat,\n  resources: ResourceBundle,\n  blueprint: Blueprint\n): null | LinkedPass {\n  if (node.type === 'render') {\n    return linkRenderPass(\n      device,\n      id,\n      node,\n      builtinUniforms,\n      outputFormat,\n      resources,\n      blueprint\n    );\n  }\n  return linkComputePass(\n    device,\n    id,\n    node,\n    builtinUniforms,\n    resources,\n    blueprint\n  );\n}\n\nexport function linkProgram(\n  device: GPUDevice,\n  builtinUniforms: GPUBuffer,\n  outputFormat: GPUTextureFormat,\n  resources: ResourceBundle,\n  blueprint: Blueprint\n): null | Executable {\n  if (resources.programMap === null) {\n    return null;\n  }\n\n  const passes = resources.programMap.passes;\n  const linkedPasses = resources.programMap.passOrder.map(id =>\n    linkPass(\n      device,\n      id,\n      passes.get(id)!,\n      builtinUniforms,\n      outputFormat,\n      resources,\n      blueprint\n    )\n  );\n  return new Executable(\n    device,\n    linkedPasses.filter(pass => pass !== null) as LinkedPass[]\n  );\n}\n","import { Blueprint, ShaderID } from '../../blueprint/blueprint';\nimport { ResourceBundle } from './resource_bundle';\nimport { Executable } from './executable';\nimport { linkProgram } from './linker';\nimport { ShaderCompilationMessage } from './shader_cache';\n\nexport type ShaderCompilationResults = Map<\n  ShaderID,\n  ShaderCompilationMessage[]\n>;\n\nexport type ShadersCompiledHandler = (\n  results: ShaderCompilationResults\n) => void;\n\nexport class Program {\n  private readonly device_: GPUDevice;\n  private readonly builtinUniforms_: GPUBuffer;\n  private resources_: ResourceBundle;\n  private executable_: null | Executable;\n  private blueprint_: null | Blueprint;\n  private outputFormat_: GPUTextureFormat;\n  private onShadersCompiled_: null | ShadersCompiledHandler;\n\n  constructor(device: GPUDevice) {\n    this.device_ = device;\n    this.builtinUniforms_ = device.createBuffer({\n      size: 24,\n      usage: GPUBufferUsage.UNIFORM | GPUBufferUsage.COPY_DST,\n    });\n    this.executable_ = null;\n    this.blueprint_ = null;\n    this.resources_ = new ResourceBundle(device);\n    this.outputFormat_ = 'bgra8unorm';\n    this.onShadersCompiled_ = null;\n  }\n\n  get resources() {\n    return this.resources_;\n  }\n\n  set onShadersCompiled(handler: null | ShadersCompiledHandler) {\n    this.onShadersCompiled_ = handler;\n  }\n\n  dispose() {\n    this.builtinUniforms_.destroy();\n    this.resources_.dispose();\n  }\n\n  setBlueprint(blueprint: Blueprint) {\n    this.blueprint_ = blueprint;\n    this.compile_();\n  }\n\n  updateUniforms(uniforms: Record<string, any>) {\n    const device = this.device_;\n    const data = new ArrayBuffer(24);\n    const floats = new Float32Array(data);\n    const uints = new Uint32Array(data);\n    floats[0] = (uniforms['time'] as number) ?? 0;\n    floats[1] = (uniforms['timeDelta'] as number) ?? 0;\n    uints[2] = (uniforms['frame'] as number) ?? 0;\n    uints[4] = uniforms['resolution']?.width ?? 1;\n    uints[5] = uniforms['resolution']?.height ?? 1;\n    device.queue.writeBuffer(this.builtinUniforms_, 0, data, 0, 24);\n  }\n\n  run(\n    texture: GPUTexture,\n    resolution: GPUExtent3DDict,\n    outputFormat: GPUTextureFormat\n  ) {\n    if (this.outputFormat_ !== outputFormat && this.blueprint_ !== null) {\n      this.executable_ = null;\n      this.outputFormat_ = outputFormat;\n      this.compile_();\n      return;\n    }\n\n    if (this.executable_ === null) {\n      return;\n    }\n\n    this.executable_.run(texture, resolution);\n  }\n\n  async compile_() {\n    const blueprint = this.blueprint_!;\n    await this.resources_.update(blueprint);\n    if (this.onShadersCompiled_) {\n      const results = new Map();\n      for (const [id, shader] of this.resources_.shaders.entries()) {\n        results.set(id, shader.messages);\n      }\n      this.onShadersCompiled_(results);\n    }\n    this.executable_ = linkProgram(\n      this.device_,\n      this.builtinUniforms_,\n      this.outputFormat_,\n      this.resources_,\n      blueprint\n    );\n  }\n}\n","import { deepCopy, deepEquals } from '../base/util';\nimport { Blueprint } from '../blueprint/blueprint';\nimport { Gpu } from './gpu';\nimport { Program, ShadersCompiledHandler } from './program/program';\n\nconst getContextFromCanvas = (\n  canvas: HTMLCanvasElement\n): null | GPUCanvasContext => {\n  return canvas.getContext('webgpu') as null | GPUCanvasContext;\n};\n\nexport class FrameProducer {\n  private gpu_: Gpu;\n\n  private lastUsedContext_?: GPUCanvasContext;\n  private lastUsedResolution_?: GPUExtent3DDict;\n\n  private startTime_?: number;\n  private lastFrameTime_?: number;\n  private frame_: number;\n\n  private blueprint_: null | Blueprint;\n  private program_: null | Program;\n\n  private onShadersCompiled_?: ShadersCompiledHandler;\n\n  constructor() {\n    this.gpu_ = new Gpu();\n    this.gpu_.onAcquired = this.onGpuAcquired_;\n    this.frame_ = 0;\n    this.blueprint_ = null;\n    this.program_ = null;\n  }\n\n  set onShadersCompiled(handler: ShadersCompiledHandler) {\n    this.onShadersCompiled_ = handler;\n    if (this.program_) {\n      this.program_.onShadersCompiled = handler;\n    }\n  }\n\n  setBlueprint(blueprint: Blueprint) {\n    if (this.blueprint_ && deepEquals(this.blueprint_, blueprint)) {\n      return;\n    }\n\n    this.blueprint_ = deepCopy(blueprint);\n    if (this.program_) {\n      this.program_.setBlueprint(blueprint);\n    }\n  }\n\n  stop() {\n    this.blueprint_ = null;\n    this.program_ = null;\n  }\n\n  render(canvas: HTMLCanvasElement, resolution: GPUExtent3DDict) {\n    if (!this.gpu_ || !this.gpu_.isAcquired || !this.program_) {\n      return;\n    }\n\n    const context = getContextFromCanvas(canvas);\n    if (context === null) {\n      this.stop();\n      throw new Error('no webgpu context');\n    }\n\n    const device = this.gpu_.device!;\n    const outputFormat: GPUTextureFormat = context.getPreferredFormat(\n      this.gpu_.adapter!\n    );\n\n    if (\n      !this.lastUsedContext_ ||\n      !this.lastUsedResolution_ ||\n      this.lastUsedContext_ !== context ||\n      this.lastUsedResolution_.width !== resolution.width ||\n      this.lastUsedResolution_.height !== resolution.height\n    ) {\n      context.configure({\n        device,\n        format: outputFormat,\n        size: { ...resolution },\n      });\n      this.lastUsedResolution_ = { ...resolution };\n    }\n\n    // This is an egregious hack to get consistent nearest-neighbor filtering on\n    // a scaled-up canvas texture in Chrome. See crbug.com/1044590.\n    canvas.style.filter = 'blur(0px)';\n\n    const now = new Date().getTime();\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n    const delta = now - (this.lastFrameTime_ ?? now);\n    this.lastFrameTime_ = now;\n\n    this.program_.updateUniforms({\n      time: (now - this.startTime_) / 1000,\n      timeDelta: delta / 1000,\n      frame: this.frame_++,\n      resolution,\n    });\n    this.program_.run(context.getCurrentTexture(), resolution, outputFormat);\n  }\n\n  onGpuAcquired_ = () => {\n    if (this.program_) {\n      this.program_.dispose();\n    }\n    this.program_ = new Program(this.gpu_.device!);\n    if (this.blueprint_) {\n      this.program_.setBlueprint(this.blueprint_);\n    }\n    if (this.onShadersCompiled_) {\n      this.program_.onShadersCompiled = this.onShadersCompiled_;\n    }\n  };\n}\n","import 'codemirror/theme/3024-day.css';\nimport 'codemirror/theme/3024-night.css';\nimport 'codemirror/theme/abbott.css';\nimport 'codemirror/theme/abcdef.css';\nimport 'codemirror/theme/ambiance-mobile.css';\nimport 'codemirror/theme/ambiance.css';\nimport 'codemirror/theme/ayu-dark.css';\nimport 'codemirror/theme/ayu-mirage.css';\nimport 'codemirror/theme/base16-dark.css';\nimport 'codemirror/theme/base16-light.css';\nimport 'codemirror/theme/bespin.css';\nimport 'codemirror/theme/blackboard.css';\nimport 'codemirror/theme/cobalt.css';\nimport 'codemirror/theme/colorforth.css';\nimport 'codemirror/theme/darcula.css';\nimport 'codemirror/theme/dracula.css';\nimport 'codemirror/theme/duotone-dark.css';\nimport 'codemirror/theme/duotone-light.css';\nimport 'codemirror/theme/eclipse.css';\nimport 'codemirror/theme/elegant.css';\nimport 'codemirror/theme/erlang-dark.css';\nimport 'codemirror/theme/gruvbox-dark.css';\nimport 'codemirror/theme/hopscotch.css';\nimport 'codemirror/theme/icecoder.css';\nimport 'codemirror/theme/idea.css';\nimport 'codemirror/theme/isotope.css';\nimport 'codemirror/theme/juejin.css';\nimport 'codemirror/theme/lesser-dark.css';\nimport 'codemirror/theme/liquibyte.css';\nimport 'codemirror/theme/lucario.css';\nimport 'codemirror/theme/material-darker.css';\nimport 'codemirror/theme/material-ocean.css';\nimport 'codemirror/theme/material-palenight.css';\nimport 'codemirror/theme/material.css';\nimport 'codemirror/theme/mbo.css';\nimport 'codemirror/theme/mdn-like.css';\nimport 'codemirror/theme/midnight.css';\nimport 'codemirror/theme/monokai.css';\nimport 'codemirror/theme/moxer.css';\nimport 'codemirror/theme/neat.css';\nimport 'codemirror/theme/neo.css';\nimport 'codemirror/theme/night.css';\nimport 'codemirror/theme/nord.css';\nimport 'codemirror/theme/oceanic-next.css';\nimport 'codemirror/theme/panda-syntax.css';\nimport 'codemirror/theme/paraiso-dark.css';\nimport 'codemirror/theme/paraiso-light.css';\nimport 'codemirror/theme/pastel-on-dark.css';\nimport 'codemirror/theme/railscasts.css';\nimport 'codemirror/theme/rubyblue.css';\nimport 'codemirror/theme/seti.css';\nimport 'codemirror/theme/shadowfox.css';\nimport 'codemirror/theme/solarized.css';\nimport 'codemirror/theme/ssms.css';\nimport 'codemirror/theme/the-matrix.css';\nimport 'codemirror/theme/tomorrow-night-bright.css';\nimport 'codemirror/theme/tomorrow-night-eighties.css';\nimport 'codemirror/theme/ttcn.css';\nimport 'codemirror/theme/twilight.css';\nimport 'codemirror/theme/vibrant-ink.css';\nimport 'codemirror/theme/xq-dark.css';\nimport 'codemirror/theme/xq-light.css';\nimport 'codemirror/theme/yeti.css';\nimport 'codemirror/theme/yonce.css';\nimport 'codemirror/theme/zenburn.css';\n\nexport const CODE_MIRROR_THEMES = [\n  '3024-day',\n  '3024-night',\n  'abbott',\n  'abcdef',\n  'ambiance-mobile',\n  'ambiance',\n  'ayu-dark',\n  'ayu-mirage',\n  'base16-dark',\n  'base16-light',\n  'bespin',\n  'blackboard',\n  'cobalt',\n  'colorforth',\n  'darcula',\n  'dracula',\n  'duotone-dark',\n  'duotone-light',\n  'eclipse',\n  'elegant',\n  'erlang-dark',\n  'gruvbox-dark',\n  'hopscotch',\n  'icecoder',\n  'idea',\n  'isotope',\n  'juejin',\n  'lesser-dark',\n  'liquibyte',\n  'lucario',\n  'material-darker',\n  'material-ocean',\n  'material-palenight',\n  'material',\n  'mbo',\n  'mdn-like',\n  'midnight',\n  'monokai',\n  'moxer',\n  'neat',\n  'neo',\n  'night',\n  'nord',\n  'oceanic-next',\n  'panda-syntax',\n  'paraiso-dark',\n  'paraiso-light',\n  'pastel-on-dark',\n  'railscasts',\n  'rubyblue',\n  'seti',\n  'shadowfox',\n  'solarized',\n  'ssms',\n  'the-matrix',\n  'tomorrow-night-bright',\n  'tomorrow-night-eighties',\n  'ttcn',\n  'twilight',\n  'vibrant-ink',\n  'xq-dark',\n  'xq-light',\n  'yeti',\n  'yonce',\n  'zenburn',\n];\n","import './labeled_field.css';\n\nimport React from 'react';\n\ninterface Props {\n  label: string;\n  children: React.ReactNode;\n}\n\nexport const LabeledField = ({ label, children }: Props) => {\n  return (\n    <div className=\"LabeledField\">\n      <div className=\"Label\">{label}</div>\n      <div className=\"Field\">{children}</div>\n    </div>\n  );\n};\n","import './control_panel.css';\n\nimport React from 'react';\n\nimport { Blueprint } from '../blueprint/blueprint';\nimport {\n  serializeBlueprint,\n  SerializedBlueprint,\n} from '../blueprint/serialization';\nimport { CODE_MIRROR_THEMES } from './code_mirror_themes';\nimport { DisplayConfig } from './display';\nimport { LabeledField } from './labeled_field';\n\ninterface Props {\n  blueprint: Blueprint;\n  displayConfig: DisplayConfig;\n  onDisplayConfigChange: (change: Partial<DisplayConfig>) => void;\n  savedBlueprints: Record<string, SerializedBlueprint>;\n  onSaveBlueprint: (name: string) => void;\n  onLoadBlueprint: (name: string) => void;\n  onImportBlueprint: (blueprint: SerializedBlueprint) => void;\n  onDeleteBlueprint: (name: string) => void;\n  codeMirrorTheme: string;\n  onCodeMirrorThemeChange: (name: string) => void;\n}\n\ninterface State {\n  optionsVisible: boolean;\n  loadMenuVisible: boolean;\n  pasteMenuVisible: boolean;\n}\n\nexport class ControlPanel extends React.Component<Props, State> {\n  private pixelSizeToggleRef_: React.RefObject<HTMLInputElement>;\n  private pixelSizeRef_: React.RefObject<HTMLInputElement>;\n  private framebufferWidthRef_: React.RefObject<HTMLInputElement>;\n  private framebufferHeightRef_: React.RefObject<HTMLInputElement>;\n  private importRef_: React.RefObject<HTMLTextAreaElement>;\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      optionsVisible: false,\n      loadMenuVisible: false,\n      pasteMenuVisible: false,\n    };\n\n    this.pixelSizeToggleRef_ = React.createRef();\n    this.pixelSizeRef_ = React.createRef();\n    this.framebufferWidthRef_ = React.createRef();\n    this.framebufferHeightRef_ = React.createRef();\n    this.importRef_ = React.createRef();\n  }\n\n  render() {\n    const displayConfig = this.props.displayConfig;\n    const makeAspectOption = (ratio: string) => (\n      <label>\n        <input\n          type=\"radio\"\n          name=\"aspect\"\n          value={ratio}\n          onChange={this.setAspectRatio_}\n          checked={ratio === displayConfig.aspect}\n        />\n        {ratio}\n      </label>\n    );\n\n    return (\n      <div className=\"ControlPanel\">\n        <button\n          className=\"Toggle\"\n          title=\"Options\"\n          onClick={this.toggleOptions_}\n        >\n          ⚙️\n        </button>\n        <button\n          className=\"Toggle\"\n          title=\"Toggle Fullscreen\"\n          onClick={this.enterFullscreen_}\n        >\n          🖥️\n        </button>\n        {this.state.optionsVisible && (\n          <div className=\"OptionsPanel\">\n            <h1>Display Options</h1>\n            <h2>Aspect Ratio</h2>\n            {makeAspectOption('None')}\n            {makeAspectOption('1:1')}\n            {makeAspectOption('4:3')}\n            {makeAspectOption('16:9')}\n            {makeAspectOption('16:10')}\n            <h2>Resolution</h2>\n            <label>\n              <input\n                type=\"radio\"\n                name=\"resolution\"\n                value=\"pixel\"\n                ref={this.pixelSizeToggleRef_}\n                onChange={this.updateResolution_}\n                checked={displayConfig.resolution.mode === 'pixel'}\n              />\n              Fixed Pixel Size\n              <input\n                type=\"number\"\n                name=\"pixelSize\"\n                value={displayConfig.resolution.pixelSize ?? 1}\n                ref={this.pixelSizeRef_}\n                style={{ width: '3em', marginLeft: '1em' }}\n                onChange={this.updateResolution_}\n              />\n            </label>\n            <label>\n              <input\n                type=\"radio\"\n                name=\"resolution\"\n                value=\"framebuffer\"\n                onChange={this.updateResolution_}\n                checked={displayConfig.resolution.mode === 'framebuffer'}\n              />\n              Fixed Framebuffer Size\n              <input\n                type=\"text\"\n                name=\"framebufferWidth\"\n                style={{ width: '4em', marginLeft: '1em' }}\n                ref={this.framebufferWidthRef_}\n                value={displayConfig.resolution.framebufferSize?.width ?? 4}\n                onChange={this.updateResolution_}\n              />\n              x\n              <input\n                type=\"text\"\n                name=\"framebufferHeight\"\n                style={{ width: '4em' }}\n                ref={this.framebufferHeightRef_}\n                value={displayConfig.resolution.framebufferSize?.height ?? 4}\n                onChange={this.updateResolution_}\n              />\n            </label>\n            <h1>Editor Options</h1>\n            <LabeledField label=\"Theme\">\n              <select\n                value={this.props.codeMirrorTheme}\n                onChange={e =>\n                  this.props.onCodeMirrorThemeChange(e.currentTarget.value)\n                }\n              >\n                {CODE_MIRROR_THEMES.map(theme => {\n                  return (\n                    <option key={theme} value={theme}>\n                      {theme}\n                    </option>\n                  );\n                })}\n              </select>\n            </LabeledField>\n          </div>\n        )}\n        <button\n          className=\"Toggle\"\n          onClick={this.saveBlueprint_}\n          title=\"Save Blueprint\"\n        >\n          💾\n        </button>\n        <button\n          className=\"Toggle\"\n          onClick={this.toggleLoadBlueprintPanel_}\n          title=\"Load Blueprint\"\n        >\n          📂\n        </button>\n        {this.state.loadMenuVisible && (\n          <div className=\"LoadBlueprintPanel\">\n            <h1>Saved Shaders</h1>\n            {Object.entries(this.props.savedBlueprints).map(\n              ([name, blueprint]) => {\n                return (\n                  <div key={name} className=\"LoadMenuItem\">\n                    <div\n                      className=\"LoadMenuName\"\n                      onClick={() => this.loadBlueprint_(name)}\n                    >\n                      {name}\n                    </div>\n                    <button\n                      className=\"LoadMenuRemove\"\n                      onClick={() => this.deleteBlueprint_(name)}\n                    >\n                      x\n                    </button>\n                  </div>\n                );\n              }\n            )}\n          </div>\n        )}\n        <button\n          className=\"Toggle\"\n          onClick={this.copyBlueprintToClipboard_}\n          title=\"Copy Blueprint To Clipboard\"\n        >\n          📋\n        </button>\n        <button\n          className=\"Toggle\"\n          onClick={this.togglePasteMenu_}\n          title=\"Paste Blueprint From Clipboard\"\n        >\n          ⬇\n        </button>\n        {this.state.pasteMenuVisible && (\n          <div className=\"PasteBlueprintPanel\">\n            <h1>Import From Clipboard</h1>\n            Paste it here:\n            <textarea ref={this.importRef_} />\n            <button title=\"Import\" onClick={this.importBlueprintFromClipboard_}>\n              Import\n            </button>\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  saveBlueprint_ = () => {\n    const name = prompt('Name it!');\n    if (name === null || name === '') {\n      return;\n    }\n\n    this.props.onSaveBlueprint(name);\n  };\n\n  loadBlueprint_ = (name: string) => {\n    this.props.onLoadBlueprint(name);\n    this.toggleLoadBlueprintPanel_();\n  };\n\n  copyBlueprintToClipboard_ = async () => {\n    navigator.clipboard.writeText(\n      JSON.stringify(\n        await serializeBlueprint(this.props.blueprint, { serializeBlobs: true })\n      )\n    );\n  };\n\n  importBlueprintFromClipboard_ = () => {\n    this.togglePasteMenu_();\n\n    if (!this.importRef_.current) {\n      return;\n    }\n\n    const serializedBlueprint = this.importRef_.current.value;\n    const serialized = JSON.parse(\n      serializedBlueprint\n    ) as null | SerializedBlueprint;\n    if (!serialized) {\n      return;\n    }\n\n    this.props.onImportBlueprint(serialized);\n  };\n\n  togglePasteMenu_ = () => {\n    this.setState((state, props) => ({\n      pasteMenuVisible: !state.pasteMenuVisible,\n    }));\n  };\n\n  deleteBlueprint_ = (name: string) => {\n    this.props.onDeleteBlueprint(name);\n  };\n\n  toggleLoadBlueprintPanel_ = () => {\n    this.setState((state, props) => ({\n      loadMenuVisible: !state.loadMenuVisible,\n    }));\n  };\n\n  toggleOptions_ = () => {\n    this.setState((state, props) => ({\n      optionsVisible: !state.optionsVisible,\n    }));\n  };\n\n  enterFullscreen_ = async () => {\n    document.querySelector('canvas')!.requestFullscreen();\n  };\n\n  setAspectRatio_ = (e: React.ChangeEvent<HTMLInputElement>) => {\n    this.props.onDisplayConfigChange({ aspect: e.currentTarget.value });\n    this.toggleOptions_();\n  };\n\n  updateResolution_ = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const target = e.currentTarget!;\n    if (\n      target === this.pixelSizeToggleRef_.current ||\n      target.name === 'pixelSize'\n    ) {\n      const pixelSize = parseInt(this.pixelSizeRef_.current!.value);\n      if (!isNaN(pixelSize)) {\n        this.props.onDisplayConfigChange({\n          resolution: {\n            mode: 'pixel',\n            pixelSize,\n          },\n        });\n      }\n      return;\n    }\n\n    const framebufferSize = {\n      width: parseInt(this.framebufferWidthRef_.current!.value),\n      height: parseInt(this.framebufferHeightRef_.current!.value),\n    };\n    if (isNaN(framebufferSize.width) || isNaN(framebufferSize.height)) {\n      return;\n    }\n\n    this.props.onDisplayConfigChange({\n      resolution: {\n        mode: 'framebuffer',\n        framebufferSize,\n      },\n    });\n  };\n}\n","import './display.css';\n\nimport React from 'react';\n\nexport interface DisplayConfig {\n  aspect: string;\n  resolution: {\n    mode: 'pixel' | 'framebuffer';\n    pixelSize?: number;\n    framebufferSize?: { width: number; height: number };\n  };\n}\n\ninterface Props {\n  render: (canvas: HTMLCanvasElement) => void;\n  config: DisplayConfig;\n}\n\nexport class Display extends React.Component<Props> {\n  private wrapperRef_: React.RefObject<HTMLDivElement>;\n  private canvasRef_: React.RefObject<HTMLCanvasElement>;\n  private pendingFrameRequest_: null | number;\n\n  constructor(props: Props) {\n    super(props);\n    this.wrapperRef_ = React.createRef();\n    this.canvasRef_ = React.createRef();\n    this.pendingFrameRequest_ = null;\n  }\n\n  componentDidMount() {\n    const renderNextFrame = () => {\n      const wrapper = this.wrapperRef_.current!;\n      const canvas = this.canvasRef_.current!;\n      const width = wrapper.clientWidth;\n      const height = wrapper.clientHeight;\n      if (canvas.width !== width || canvas.height !== height) {\n        canvas.width = width;\n        canvas.height = height;\n      }\n      this.props.render(canvas);\n      this.pendingFrameRequest_ = requestAnimationFrame(renderNextFrame);\n    };\n\n    renderNextFrame();\n  }\n\n  componentWillUnmount() {\n    if (this.pendingFrameRequest_ !== null) {\n      cancelAnimationFrame(this.pendingFrameRequest_);\n      this.pendingFrameRequest_ = null;\n    }\n  }\n\n  render() {\n    const config = this.props.config;\n    const [aspectX, aspectY] = config.aspect.split(':').map(s => parseInt(s));\n    const stretch = isNaN(aspectX) || isNaN(aspectY);\n    const computedWrapperStyle: React.CSSProperties = {\n      height: stretch ? '100%' : 'auto',\n      aspectRatio: stretch ? 'auto' : `${aspectX}/${aspectY}`,\n    };\n    return (\n      <div className=\"Display\">\n        <div\n          ref={this.wrapperRef_}\n          className=\"CanvasWrapper\"\n          style={computedWrapperStyle}\n        >\n          <canvas ref={this.canvasRef_} />\n        </div>\n      </div>\n    );\n  }\n}\n","type IdMap = Map<string, number>;\n\nexport class KeyGenerator {\n  private nextIdMap_: WeakMap<any, IdMap>;\n\n  constructor() {\n    this.nextIdMap_ = new WeakMap();\n  }\n\n  generateKey(object: Record<string, any>, maybePrefix?: string): string {\n    let idMap = this.nextIdMap_.get(object);\n    if (!idMap) {\n      idMap = new Map();\n      this.nextIdMap_.set(object, idMap);\n    }\n\n    const prefix = maybePrefix ?? '';\n    let nextId = idMap.get(prefix) ?? 0;\n    const nextKey = () => `${prefix}${nextId}`;\n    while (object.hasOwnProperty(nextKey())) {\n      ++nextId;\n    }\n    idMap.set(prefix, nextId + 1);\n    return nextKey();\n  }\n}\n","import './panel.css';\n\nimport { Handle, Position } from 'react-flow-renderer';\n\nimport { BindingNode } from '../../blueprint/blueprint';\nimport { PanelData } from './panel';\n\nexport type BindingId = { group: number; binding: number };\n\ntype AnyPanelData<NodeType> = NodeType extends BindingNode\n  ? PanelData<NodeType>\n  : never;\n\ninterface Props {\n  data: AnyPanelData<BindingNode>;\n}\n\nexport const BindingPanel = ({ data }: Props) => {\n  const node = data.node;\n  const update = (update: Partial<BindingId>) => {\n    data.onChange({\n      group: Math.max(0, update.group ?? node.group),\n      binding: Math.max(0, update.binding ?? node.binding),\n    });\n  };\n\n  return (\n    <div>\n      <Handle\n        type=\"target\"\n        position={'top' as Position}\n        className=\"Handle BindingStub\"\n        isConnectable={false}\n      />\n      <Handle\n        type=\"source\"\n        position={'bottom' as Position}\n        className=\"Handle BindingStub\"\n        isConnectable={false}\n      />\n      <div>\n        <div className=\"Row\">\n          Group\n          <input\n            type=\"number\"\n            value={node.group}\n            onChange={e => update({ group: e.currentTarget.valueAsNumber })}\n          />\n        </div>\n        <div className=\"Row\">\n          Binding\n          <input\n            type=\"number\"\n            value={node.binding}\n            onChange={e => update({ binding: e.currentTarget.valueAsNumber })}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import './editable_label.css';\n\nimport React from 'react';\n\ninterface Props {\n  value: string;\n  enabled?: boolean;\n  emptyText?: string;\n  onChange: (value: string) => void;\n}\n\ninterface State {\n  value: string;\n  isEditing: boolean;\n}\n\nexport class EditableLabel extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      value: props.value ?? '',\n      isEditing: false,\n    };\n  }\n\n  render() {\n    const isEmpty = this.state.value === '';\n    const isEditing = this.state.isEditing;\n    const editingClass = isEditing ? 'Editing' : 'NotEditing';\n    const emptyClass = isEmpty ? 'Empty' : 'NotEmpty';\n    const defaultValue = !isEmpty\n      ? this.state.value\n      : this.props.emptyText ?? '';\n    return (\n      <input\n        className={`EditableLabel ${editingClass} ${emptyClass}`}\n        type=\"text\"\n        onKeyDown={this.onKeyDown_}\n        onBlur={this.onFocusOut_}\n        defaultValue={defaultValue}\n        readOnly={!isEditing}\n        onClick={this.onClick_}\n        autoFocus\n      />\n    );\n  }\n\n  onClick_ = (e: React.MouseEvent<HTMLInputElement>) => {\n    if (this.props.enabled === false) {\n      return;\n    }\n    this.setState({ isEditing: true });\n  };\n\n  commit_ = (untrimmedValue: string) => {\n    const value = untrimmedValue.trim();\n    if (value === '') {\n      this.setState({ isEditing: false });\n      return;\n    }\n    this.setState({ value, isEditing: false });\n    this.props.onChange(value);\n  };\n\n  onKeyDown_ = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    if (e.key === 'Enter') {\n      this.commit_(e.currentTarget.value);\n    } else if (e.key === 'Escape') {\n      this.setState({ isEditing: false });\n    }\n  };\n\n  onFocusOut_ = (e: React.FocusEvent<HTMLInputElement>) => {\n    this.commit_(e.currentTarget.value);\n  };\n}\n","import './panel.css';\n\nimport React, { ReactNode } from 'react';\n\nimport { Blueprint, Node } from '../../blueprint/blueprint';\nimport { EditableLabel } from '../editable_label';\nimport { LabeledField } from '../labeled_field';\n\ntype UpdateFn<NodeType extends Node> = (update: Partial<NodeType>) => void;\n\nexport interface PanelData<NodeType extends Node> {\n  blueprint: Blueprint;\n  node: NodeType;\n  onChange: UpdateFn<NodeType>;\n  destroy: () => void;\n}\n\nexport interface PanelProps<NodeType extends Node> {\n  data: PanelData<NodeType>;\n}\n\ninterface Props {\n  title?: string;\n  className?: string;\n  node: Node;\n  onRename?: (name: string) => void;\n  destroy: () => void;\n  children?: ReactNode;\n}\n\nexport const Panel = (props: Props) => {\n  return (\n    <div className={`Node Node-${props.node.type} ${props.className}`}>\n      <button className=\"RemoveButton\" onClick={props.destroy}></button>\n      <div className=\"Title\">{props.title}</div>\n      <div className=\"Content\">\n        {props.onRename ? (\n          <LabeledField label=\"Name\">\n            <EditableLabel value={props.node.name} onChange={props.onRename} />\n          </LabeledField>\n        ) : (\n          <div />\n        )}\n        {props.children}\n      </div>\n    </div>\n  );\n};\n","import { Connection } from 'react-flow-renderer';\n\nimport { Blueprint, Node, NodeID } from '../../blueprint/blueprint';\n\ninterface ConnectionData {\n  source: Node;\n  target: Node;\n  sourceName: NodeID;\n  targetName: NodeID;\n  targetHandle: string;\n}\n\nfunction resolveConnection(\n  c: Connection,\n  blueprint: Blueprint\n): null | ConnectionData {\n  if (!c.source || !c.target) {\n    return null;\n  }\n\n  const source = blueprint.nodes[c.source];\n  const target = blueprint.nodes[c.target];\n  if (!source || !target || !c.targetHandle) {\n    return null;\n  }\n\n  return {\n    source,\n    target,\n    sourceName: c.source,\n    targetName: c.target,\n    targetHandle: c.targetHandle,\n  };\n}\n\nexport function isValidBindingConnection(c: Connection, blueprint: Blueprint) {\n  const data = resolveConnection(c, blueprint);\n  if (!data) {\n    return false;\n  }\n\n  if (\n    data.source.type !== 'buffer' &&\n    data.source.type !== 'texture' &&\n    data.source.type !== 'sampler'\n  ) {\n    return false;\n  }\n\n  if (data.target.type !== 'render' && data.target.type !== 'compute') {\n    return false;\n  }\n\n  if (data.targetHandle !== 'bindings') {\n    return false;\n  }\n\n  return !Object.values(blueprint.nodes).some((node: Node) => {\n    return (\n      node.type === 'connection' &&\n      node.connectionType === 'binding' &&\n      node.source === data.sourceName &&\n      node.target === data.targetName\n    );\n  });\n}\n\nexport function isValidQueueConnection(c: Connection, blueprint: Blueprint) {\n  const data = resolveConnection(c, blueprint);\n  if (!data) {\n    return false;\n  }\n\n  if (data.source.type !== 'render' && data.source.type !== 'compute') {\n    return false;\n  }\n\n  if (data.target.type !== 'render' && data.target.type !== 'compute') {\n    return false;\n  }\n\n  return !Object.values(blueprint.nodes).some((node: Node) => {\n    return (\n      node.type === 'connection' &&\n      node.connectionType === 'queue' &&\n      node.source === data.sourceName &&\n      node.target === data.targetName\n    );\n  });\n}\n","import { Handle, Position } from 'react-flow-renderer';\n\nimport { BufferInitializer, BufferNode } from '../../blueprint/blueprint';\nimport { LabeledField } from '../labeled_field';\nimport { Panel, PanelProps } from './panel';\nimport { isValidBindingConnection } from './connection_validation';\n\nexport const BufferPanel = (props: PanelProps<BufferNode>) => {\n  const data = props.data;\n  const node = data.node;\n  return (\n    <Panel\n      title=\"Buffer\"\n      node={node}\n      onRename={name => data.onChange({ name })}\n      destroy={data.destroy}\n    >\n      <div>\n        <Handle\n          type=\"source\"\n          className=\"Handle Binding\"\n          position={'bottom' as Position}\n          isValidConnection={c => isValidBindingConnection(c, data.blueprint)}\n        />\n        <LabeledField label=\"Size\">\n          <input\n            type=\"number\"\n            value={node.size}\n            style={{ width: '5em', textAlign: 'right' }}\n            onChange={e =>\n              data.onChange({ size: e.currentTarget.valueAsNumber })\n            }\n          />\n        </LabeledField>\n        <LabeledField label=\"Init\">\n          <select\n            value={node.init}\n            style={{ width: '9em' }}\n            onChange={e =>\n              data.onChange({\n                init: e.currentTarget.value as BufferInitializer,\n              })\n            }\n          >\n            <option value=\"zero\">Zero</option>\n            <option value=\"random-floats\">Random Floats</option>\n            <option value=\"random-uints\">Random Uints</option>\n          </select>\n        </LabeledField>\n      </div>\n    </Panel>\n  );\n};\n","type Closure = () => void;\n\nexport class Debouncer {\n  private minDelayMs_: number;\n  private lastInvocationMs_: null | number;\n  private pendingInvocation_: null | ReturnType<typeof setTimeout>;\n\n  constructor(minDelayMs: number) {\n    this.minDelayMs_ = minDelayMs;\n    this.lastInvocationMs_ = null;\n    this.pendingInvocation_ = null;\n  }\n\n  invoke(f: Closure) {\n    if (this.onCooldown()) {\n      this.scheduleSuppressed(f);\n      return;\n    }\n\n    this.invokeInternal(f);\n  }\n\n  private clearPendingInvocation() {\n    if (this.pendingInvocation_ !== null) {\n      clearTimeout(this.pendingInvocation_);\n    }\n    this.pendingInvocation_ = null;\n  }\n\n  private invokeInternal(f: Closure) {\n    this.clearPendingInvocation();\n    this.lastInvocationMs_ = Date.now();\n    f();\n  }\n\n  private onCooldown(): boolean {\n    if (this.lastInvocationMs_ === null) {\n      return false;\n    }\n    return Date.now() - this.lastInvocationMs_ < this.minDelayMs_;\n  }\n\n  private scheduleSuppressed(f: Closure) {\n    if (this.pendingInvocation_ !== null) {\n      clearTimeout(this.pendingInvocation_);\n    }\n    const delay = this.lastInvocationMs_! + this.minDelayMs_ - Date.now();\n    this.pendingInvocation_ = setTimeout(this.invoke.bind(this, f), delay);\n  }\n}\n","import { Handle, Position } from 'react-flow-renderer';\n\nimport { Debouncer } from '../../base/debouncer';\nimport { RenderNode } from '../../blueprint/blueprint';\nimport { EditableLabel } from '../editable_label';\nimport { LabeledField } from '../labeled_field';\nimport { Panel, PanelProps } from './panel';\nimport {\n  isValidBindingConnection,\n  isValidQueueConnection,\n} from './connection_validation';\n\nfunction colorValue(c: GPUColorDict): string {\n  const p = (x: number) => `${x < 16 ? '0' : ''}${x.toString(16)}`;\n  const cp = [c.r, c.g, c.b].map(c => p(c * 255));\n  return `#${cp.join('')}`;\n}\n\nfunction parseColor(value: string): GPUColorDict {\n  const parseComponent = (index: number) =>\n    parseInt(value.slice(index, index + 2), 16) / 255;\n  return {\n    r: parseComponent(1),\n    g: parseComponent(3),\n    b: parseComponent(5),\n    a: 1,\n  };\n}\n\nexport const RenderPanel = (props: PanelProps<RenderNode>) => {\n  const data = props.data;\n  const node = data.node;\n  const debouncer = new Debouncer(30);\n  return (\n    <Panel\n      title=\"Render Pass\"\n      node={node}\n      onRename={name => data.onChange({ name })}\n      destroy={data.destroy}\n    >\n      <div>\n        <Handle\n          id=\"bindings\"\n          type=\"target\"\n          title=\"Bindings\"\n          position={'top' as Position}\n          className=\"Handle Binding\"\n          isValidConnection={c => isValidBindingConnection(c, data.blueprint)}\n        />\n        <Handle\n          id=\"queueIn\"\n          type=\"target\"\n          title=\"Queue In\"\n          position={'left' as Position}\n          className=\"Handle Queue\"\n          isValidConnection={c => isValidQueueConnection(c, data.blueprint)}\n        />\n        <Handle\n          id=\"queueOut\"\n          type=\"source\"\n          title=\"Queue Out\"\n          position={'right' as Position}\n          className=\"Handle Queue\"\n          isValidConnection={c => isValidQueueConnection(c, data.blueprint)}\n        />\n\n        <LabeledField label=\"Vertex Shader\">\n          <select\n            value={node.vertexShader ?? ''}\n            onChange={e =>\n              data.onChange({ vertexShader: e.currentTarget.value })\n            }\n          >\n            <option value=\"\"></option>\n            {Object.entries(data.blueprint.shaders).map(([id, shader]) => (\n              <option key={id} value={id}>\n                {shader.name}\n              </option>\n            ))}\n          </select>\n        </LabeledField>\n        <LabeledField label=\"Vertex Entry Point\">\n          <EditableLabel\n            value={node.vertexEntryPoint ?? ''}\n            emptyText=\"None\"\n            onChange={value => data.onChange({ vertexEntryPoint: value })}\n          />\n        </LabeledField>\n        <LabeledField label=\"Fragment Shader\">\n          <select\n            value={node.fragmentShader ?? ''}\n            onChange={e =>\n              data.onChange({\n                fragmentShader: e.currentTarget.value,\n              })\n            }\n          >\n            <option value=\"\"></option>\n            {Object.entries(data.blueprint.shaders).map(([id, shader]) => (\n              <option key={id} value={id}>\n                {shader.name}\n              </option>\n            ))}\n          </select>\n        </LabeledField>\n        <LabeledField label=\"Fragment Entry Point\">\n          <EditableLabel\n            value={node.fragmentEntryPoint ?? ''}\n            emptyText=\"None\"\n            onChange={value => data.onChange({ fragmentEntryPoint: value })}\n          />\n        </LabeledField>\n        <LabeledField label=\"Topology\">\n          <select\n            value={node.topology ?? 'triangle-list'}\n            onChange={e =>\n              data.onChange({\n                topology: e.currentTarget.value as GPUPrimitiveTopology,\n              })\n            }\n          >\n            <option value=\"point-list\">Point List</option>\n            <option value=\"line-list\">Line List</option>\n            <option value=\"line-strip\">Line Strip</option>\n            <option value=\"triangle-list\">Triangle List</option>\n            <option value=\"triangle-strip\">Triangle Strip</option>\n          </select>\n        </LabeledField>\n        <LabeledField label=\"# Vertices\">\n          <input\n            type=\"number\"\n            value={node.numVertices}\n            onChange={e =>\n              data.onChange({\n                numVertices: Math.max(e.currentTarget.valueAsNumber, 0),\n              })\n            }\n          />\n        </LabeledField>\n        <LabeledField label=\"# Instances\">\n          <input\n            type=\"number\"\n            value={node.numInstances}\n            onChange={e =>\n              data.onChange({\n                numInstances: Math.max(e.currentTarget.valueAsNumber, 0),\n              })\n            }\n          />\n        </LabeledField>\n        <LabeledField label=\"Clear\">\n          <input\n            type=\"checkbox\"\n            checked={node.clear ?? false}\n            onChange={e => data.onChange({ clear: !node.clear })}\n          />\n        </LabeledField>\n        <LabeledField label=\"Clear Color\">\n          <input\n            type=\"color\"\n            value={colorValue(node.clearColor ?? { r: 0, g: 0, b: 0, a: 1 })}\n            onChange={e =>\n              debouncer.invoke(() =>\n                data.onChange({ clearColor: parseColor(e.currentTarget.value) })\n              )\n            }\n          />\n        </LabeledField>\n        <LabeledField label=\"Depth Test\">\n          <select\n            value={node.depthTest ?? 'always'}\n            onChange={e =>\n              data.onChange({\n                depthTest: e.currentTarget.value as GPUCompareFunction,\n              })\n            }\n          >\n            <option value=\"never\">Never Pass</option>\n            <option value=\"less\">&lt;</option>\n            <option value=\"less-equal\">&lt;=</option>\n            <option value=\"equal\">=</option>\n            <option value=\"greater-equal\">&gt;=</option>\n            <option value=\"greater\">&gt;</option>\n            <option value=\"not-equal\">≠</option>\n            <option value=\"always\">Always Pass</option>\n          </select>\n        </LabeledField>\n      </div>\n    </Panel>\n  );\n};\n","import React from 'react';\nimport { Handle, Position } from 'react-flow-renderer';\n\nimport { TextureNode } from '../../blueprint/blueprint';\nimport { Panel, PanelProps } from './panel';\nimport { isValidBindingConnection } from './connection_validation';\n\nfunction getSelectedFile(input: HTMLInputElement): null | File {\n  if (!input.files || input.files.length === 0) {\n    return null;\n  }\n\n  return input.files[0];\n}\n\nasync function updateCanvasImage(\n  canvas: null | HTMLCanvasElement,\n  data: null | Blob\n) {\n  if (!canvas || !data) {\n    return;\n  }\n\n  const context = canvas.getContext('2d');\n  if (!context) {\n    return;\n  }\n\n  const image = await createImageBitmap(data);\n  if (!image) {\n    return;\n  }\n\n  context.drawImage(image, 0, 0, image.width, image.height, 0, 0, 128, 128);\n}\n\ntype CanvasRef = React.RefObject<HTMLCanvasElement>;\n\nexport const TexturePanel = (props: PanelProps<TextureNode>) => {\n  const data = props.data;\n  const node = data.node;\n  const canvasRef = React.useRef(null);\n\n  React.useEffect(() => {\n    const ref = canvasRef as CanvasRef;\n    if (ref.current && node.imageData instanceof Blob) {\n      updateCanvasImage(ref.current, node.imageData);\n    }\n  });\n\n  return (\n    <Panel\n      title=\"Texture\"\n      node={node}\n      onRename={name => data.onChange({ name })}\n      destroy={data.destroy}\n    >\n      <div className=\"TextureDetails\">\n        <Handle\n          type=\"source\"\n          className=\"Handle Binding\"\n          position={'bottom' as Position}\n          isValidConnection={c => isValidBindingConnection(c, data.blueprint)}\n        />\n        <input\n          type=\"file\"\n          accept=\"image/*\"\n          onChange={e => {\n            const file = getSelectedFile(e.currentTarget);\n            if (file) {\n              data.onChange({ imageData: file });\n            }\n          }}\n        />\n        <canvas\n          id={node.name}\n          ref={canvasRef as CanvasRef}\n          className=\"Preview\"\n          width={128}\n          height={128}\n        />\n      </div>\n    </Panel>\n  );\n};\n","import './blueprint_editor.css';\n\nimport React from 'react';\nimport ReactFlow, {\n  ArrowHeadType,\n  Connection,\n  Edge,\n  FlowElement,\n  FlowTransform,\n  Node as FlowNode,\n  OnLoadParams,\n  XYPosition,\n} from 'react-flow-renderer';\n\nimport { KeyGenerator } from '../base/key_generator';\nimport { deepCopy, deepUpdate, DeepPartial } from '../base/util';\nimport {\n  Blueprint,\n  BufferBindingStorageType,\n  Node,\n  NodeID,\n  ShaderID,\n} from '../blueprint/blueprint';\nimport { BufferBindingPanel } from './graph/buffer_binding_panel';\nimport { BufferPanel } from './graph/buffer_panel';\nimport { ComputePanel } from './graph/compute_panel';\nimport { CustomEdge } from './graph/custom_edge';\nimport { RenderPanel } from './graph/render_panel';\nimport { SamplerBindingPanel } from './graph/sampler_binding_panel';\nimport { SamplerPanel } from './graph/sampler_panel';\nimport { TextureBindingPanel } from './graph/texture_binding_panel';\nimport { TexturePanel } from './graph/texture_panel';\n\nconst NODE_TYPES = {\n  buffer: BufferPanel,\n  texture: TexturePanel,\n  compute: ComputePanel,\n  render: RenderPanel,\n  sampler: SamplerPanel,\n  'buffer-binding': BufferBindingPanel,\n  'sampler-binding': SamplerBindingPanel,\n  'texture-binding': TextureBindingPanel,\n};\n\nconst EDGE_TYPES = {\n  'custom-edge': CustomEdge,\n};\n\ninterface Props {\n  blueprint: Blueprint;\n  transform: FlowTransform;\n  onChange: (blueprint: Blueprint) => void;\n  onTransformChange: (transform: FlowTransform) => void;\n}\n\nclass FlowErrorBounary extends React.Component {\n  componentDidCatch(error: Error, errorInfo: React.ErrorInfo) {\n    console.log(error);\n  }\n\n  render() {\n    return this.props.children;\n  }\n}\n\ntype NewNode<T> = T extends Node\n  ? Omit<T, 'id' | 'position' | 'name'> | Omit<T, 'id' | 'name'>\n  : never;\n\nexport class BlueprintEditor extends React.Component<Props> {\n  private keyGenerator_: KeyGenerator;\n  private instance_: null | OnLoadParams;\n  private flowRef_: React.RefObject<HTMLDivElement>;\n  private lastConnectStart_: null | XYPosition;\n  private lastConnectEnd_: null | XYPosition;\n\n  constructor(props: Props) {\n    super(props);\n    this.keyGenerator_ = new KeyGenerator();\n    this.instance_ = null;\n    this.flowRef_ = React.createRef();\n    this.lastConnectStart_ = null;\n    this.lastConnectEnd_ = null;\n  }\n\n  render() {\n    const transform = this.props.transform;\n    return (\n      <div className=\"BlueprintEditor\">\n        <FlowErrorBounary>\n          <ReactFlow\n            ref={this.flowRef_}\n            nodeTypes={NODE_TYPES}\n            edgeTypes={EDGE_TYPES}\n            elements={this.createGraph_(this.props.blueprint)}\n            defaultZoom={transform.zoom}\n            defaultPosition={[transform.x, transform.y]}\n            elementsSelectable={false}\n            nodesConnectable={true}\n            nodesDraggable={true}\n            onLoad={this.onLoad_}\n            onConnectStart={this.onConnectStart_}\n            onConnectStop={this.onConnectStop_}\n            onConnect={this.onConnect_}\n            onElementClick={() => {}}\n            onMoveEnd={this.onMoveEnd_}\n            onNodeDragStop={this.onMoveNode_}\n            minZoom={0.01}\n            maxZoom={4}\n          >\n            <div className=\"Toolbar\">\n              <button onClick={this.addShader_}>+Shader</button>\n              <button onClick={this.addBuffer_}>+Buffer</button>\n              <button onClick={this.addTexture_}>+Texture</button>\n              <button onClick={this.addSampler_}>+Sampler</button>\n              <button onClick={this.addRenderPass_}>+Render Pass</button>\n              <button onClick={this.addComputePass_}>+Compute Pass</button>\n            </div>\n          </ReactFlow>\n        </FlowErrorBounary>\n      </div>\n    );\n  }\n\n  onLoad_ = (instance: OnLoadParams) => {\n    this.instance_ = instance;\n  };\n\n  onConnectStart_ = (e: React.MouseEvent) => {\n    this.lastConnectStart_ = { x: e.clientX, y: e.clientY };\n  };\n\n  onConnectStop_ = (e: any) => {\n    this.lastConnectEnd_ = { x: e.clientX, y: e.clientY };\n  };\n\n  onConnect_ = (edge: Edge<any> | Connection) => {\n    const sourceId = edge.source!;\n    const targetId = edge.target!;\n    const source = this.props.blueprint.nodes[sourceId];\n    const target = this.props.blueprint.nodes[targetId];\n    const handle = edge.targetHandle;\n    if (!source || !target) {\n      return;\n    }\n\n    const isPass = ({ type }: Node) => type === 'render' || type === 'compute';\n    if (!isPass(target)) {\n      return;\n    }\n\n    const instance = this.instance_;\n    const start = this.lastConnectStart_;\n    const end = this.lastConnectEnd_;\n    const flow = this.flowRef_.current;\n    let position = { x: 100, y: 100 };\n    if (instance && start !== null && end !== null && flow) {\n      const kBindingPanelWidth = 120;\n      const kBindingPanelHeight = 80;\n      const view = flow.getBoundingClientRect();\n      const midpoint = {\n        x: (start.x + end.x - kBindingPanelWidth) / 2 - view.x,\n        y: (start.y + end.y - kBindingPanelHeight) / 2 - view.y,\n      };\n      position = instance.project(midpoint);\n    }\n\n    if (source.type === 'buffer' && handle === 'bindings') {\n      this.addBufferBinding_(sourceId, targetId, position, 'storage-read');\n    } else if (source.type === 'texture' && handle === 'bindings') {\n      this.addTextureBinding_(sourceId, targetId, position);\n      return;\n    } else if (source.type === 'sampler' && handle === 'bindings') {\n      this.addSamplerBinding_(sourceId, targetId, position);\n      return;\n    } else if (isPass(source) && handle === 'queueIn') {\n      const id = this.newNodeKey_('queue-dep');\n      this.updateNode_(id, {\n        id,\n        name: '',\n        position,\n        type: 'connection' as const,\n        connectionType: 'queue' as const,\n        source: edge.source!,\n        target: edge.target!,\n      });\n    }\n  };\n\n  newKey_(object: Record<string, any>, prefix: string): string {\n    return this.keyGenerator_.generateKey(object, prefix);\n  }\n\n  newNodeKey_(prefix: NodeID): NodeID {\n    return this.newKey_(this.props.blueprint.nodes, prefix);\n  }\n\n  newShaderKey_(): ShaderID {\n    return this.newKey_(this.props.blueprint.shaders, 'shader');\n  }\n\n  replaceBlueprint_(blueprint: Blueprint) {\n    this.props.onChange(blueprint);\n  }\n\n  updateBlueprint_(update: DeepPartial<Blueprint>) {\n    const copy = deepCopy(this.props.blueprint);\n    deepUpdate(copy, update);\n    this.replaceBlueprint_(copy);\n  }\n\n  updateNode_(id: NodeID, update: Partial<Node>) {\n    this.updateBlueprint_({ nodes: { [id]: update } });\n  }\n\n  onMoveEnd_ = (transform?: FlowTransform) => {\n    if (transform) {\n      this.props.onTransformChange({ ...transform });\n    }\n  };\n\n  onMoveNode_ = (event: React.MouseEvent, node: FlowNode) => {\n    this.updateNode_(node.data.node.id, { position: { ...node.position } });\n  };\n\n  addShader_ = () => {\n    const id = this.newShaderKey_();\n    this.updateBlueprint_({ shaders: { [id]: { name: id, id, code: '' } } });\n  };\n\n  addNode_ = <T extends Node>(node: NewNode<T>) => {\n    const id = this.newNodeKey_(node.type);\n    this.updateNode_(id, {\n      id,\n      name: id,\n      position: { x: 100, y: 100 },\n      ...node,\n    });\n  };\n\n  addBuffer_ = () => {\n    this.addNode_({\n      type: 'buffer',\n      size: 16384,\n      init: 'zero',\n    });\n  };\n\n  addTexture_ = () => {\n    this.addNode_({\n      type: 'texture',\n      size: { width: 1024, height: 1024 },\n      format: 'rgba8unorm',\n      mipLevelCount: 1,\n      sampleCount: 1,\n      imageData: null,\n    });\n  };\n\n  addSampler_ = () => this.addNode_({ type: 'sampler' });\n\n  addBufferBinding_ = (\n    source: NodeID,\n    target: NodeID,\n    position: XYPosition,\n    storageType: BufferBindingStorageType\n  ) => {\n    this.addNode_({\n      type: 'connection',\n      connectionType: 'binding',\n      bindingType: 'buffer',\n      source,\n      target,\n      position,\n      group: 0,\n      binding: 1,\n      storageType,\n    });\n  };\n\n  addTextureBinding_ = (\n    source: NodeID,\n    target: NodeID,\n    position: XYPosition\n  ) => {\n    this.addNode_({\n      type: 'connection',\n      connectionType: 'binding',\n      bindingType: 'texture',\n      source,\n      target,\n      position,\n      group: 0,\n      binding: 1,\n    });\n  };\n\n  addSamplerBinding_ = (\n    source: NodeID,\n    target: NodeID,\n    position: XYPosition\n  ) => {\n    this.addNode_({\n      type: 'connection',\n      connectionType: 'binding',\n      bindingType: 'sampler',\n      source,\n      target,\n      position,\n      group: 0,\n      binding: 1,\n    });\n  };\n\n  addRenderPass_ = () => {\n    this.addNode_({\n      type: 'render',\n      vertexShader: null,\n      vertexEntryPoint: null,\n      fragmentShader: null,\n      fragmentEntryPoint: null,\n      topology: 'triangle-list',\n      numVertices: 4,\n      numInstances: 1,\n      indexed: false,\n      clear: true,\n      clearColor: { r: 0, g: 0, b: 0, a: 1 },\n      depthTest: 'always',\n    });\n  };\n\n  addComputePass_ = () => {\n    this.addNode_({\n      type: 'compute',\n      shader: '',\n      entryPoint: '',\n      dispatchSize: { x: 1, y: 1, z: 1 },\n    });\n  };\n\n  removeNode_ = (removedId: NodeID) => {\n    const blueprint = this.props.blueprint;\n    const removedIds: Set<NodeID> = new Set([removedId]);\n    for (const [id, node] of Object.entries(blueprint.nodes)) {\n      if (\n        node.type === 'connection' &&\n        (node.source === removedId || node.target === removedId)\n      ) {\n        removedIds.add(id);\n      }\n    }\n\n    const remainingNodes: Record<string, Node> = {};\n    for (const [id, node] of Object.entries(blueprint.nodes)) {\n      if (!removedIds.has(id)) {\n        remainingNodes[id] = deepCopy(node);\n      }\n    }\n    this.replaceBlueprint_({\n      nodes: remainingNodes,\n      shaders: blueprint.shaders,\n    });\n  };\n\n  createGraph_(blueprint: Blueprint): FlowElement[] {\n    const elements: FlowElement[] = [];\n    Object.entries(blueprint.nodes).forEach(([id, node]) => {\n      const data = {\n        blueprint,\n        node,\n        onChange: (update: any) => this.updateNode_(id, update),\n        destroy: () => this.removeNode_(id),\n      };\n      const position = node.position;\n      if (node.type !== 'connection') {\n        elements.push({ id, type: node.type, position, data });\n      } else if (node.connectionType === 'binding') {\n        const type = `${node.bindingType}-binding`;\n        const binding = `${id}-node`;\n        const sourceEdge = `${id}-source-edge`;\n        const targetEdge = `${id}-target-edge`;\n        elements.push({ id: binding, type, position, data });\n        elements.push({ id: sourceEdge, source: node.source, target: binding });\n        elements.push({\n          id: targetEdge,\n          source: binding,\n          target: node.target,\n          arrowHeadType: 'arrowclosed' as ArrowHeadType,\n        });\n      } else if (node.connectionType === 'queue') {\n        elements.push({\n          id,\n          source: node.source,\n          target: node.target,\n          targetHandle: 'queueIn',\n          type: 'custom-edge',\n          arrowHeadType: 'arrowclosed' as ArrowHeadType,\n          data,\n        });\n      }\n    });\n    return elements;\n  }\n}\n","import { Handle, Position } from 'react-flow-renderer';\n\nimport { ComputeNode } from '../../blueprint/blueprint';\nimport { EditableLabel } from '../editable_label';\nimport { LabeledField } from '../labeled_field';\nimport { Panel, PanelProps } from './panel';\nimport {\n  isValidBindingConnection,\n  isValidQueueConnection,\n} from './connection_validation';\n\nexport const ComputePanel = (props: PanelProps<ComputeNode>) => {\n  const data = props.data;\n  const node = data.node;\n  return (\n    <Panel\n      title=\"Compute Pass\"\n      node={node}\n      onRename={name => data.onChange({ name })}\n      destroy={data.destroy}\n    >\n      <div>\n        <Handle\n          id=\"bindings\"\n          type=\"target\"\n          title=\"Bindings\"\n          position={'top' as Position}\n          className=\"Handle Binding\"\n          isValidConnection={c => isValidBindingConnection(c, data.blueprint)}\n        />\n        <Handle\n          id=\"queueIn\"\n          type=\"target\"\n          title=\"Queue In\"\n          position={'left' as Position}\n          className=\"Handle Queue\"\n          isValidConnection={c => isValidQueueConnection(c, data.blueprint)}\n        />\n        <Handle\n          id=\"queueOut\"\n          type=\"source\"\n          title=\"Queue Out\"\n          position={'right' as Position}\n          className=\"Handle Queue\"\n          isValidConnection={c => isValidQueueConnection(c, data.blueprint)}\n        />\n        <LabeledField label=\"Shader\">\n          <select\n            value={node.shader ?? ''}\n            onChange={e => data.onChange({ shader: e.currentTarget.value })}\n          >\n            <option value=\"\"></option>\n            {Object.entries(data.blueprint.shaders).map(([id, shader]) => (\n              <option key={id} value={id}>\n                {shader.name}\n              </option>\n            ))}\n          </select>\n        </LabeledField>\n        <LabeledField label=\"Entry Point\">\n          <EditableLabel\n            emptyText=\"None\"\n            value={node.entryPoint ?? ''}\n            onChange={value => data.onChange({ entryPoint: value })}\n          />\n        </LabeledField>\n        <LabeledField label=\"Dispatch Size\">\n          <div className=\"DispatchSize\">\n            <div className=\"DispatchSizeElement\">\n              X{' '}\n              <input\n                type=\"number\"\n                value={node.dispatchSize.x}\n                onChange={e =>\n                  data.onChange({\n                    dispatchSize: {\n                      x: Math.max(0, e.currentTarget.valueAsNumber),\n                      y: node.dispatchSize.y,\n                      z: node.dispatchSize.z,\n                    },\n                  })\n                }\n              />\n            </div>\n            <div className=\"DispatchSizeElement\">\n              Y{' '}\n              <input\n                type=\"number\"\n                value={node.dispatchSize.y}\n                onChange={e =>\n                  data.onChange({\n                    dispatchSize: {\n                      x: node.dispatchSize.x,\n                      y: Math.max(0, e.currentTarget.valueAsNumber),\n                      z: node.dispatchSize.z,\n                    },\n                  })\n                }\n              />\n            </div>\n            <div className=\"DispatchSizeElement\">\n              Z{' '}\n              <input\n                type=\"number\"\n                value={node.dispatchSize.z}\n                onChange={e =>\n                  data.onChange({\n                    dispatchSize: {\n                      x: node.dispatchSize.x,\n                      y: node.dispatchSize.y,\n                      z: Math.max(0, e.currentTarget.valueAsNumber),\n                    },\n                  })\n                }\n              />\n            </div>\n          </div>\n        </LabeledField>\n      </div>\n    </Panel>\n  );\n};\n","import React from 'react';\nimport { Handle, Position } from 'react-flow-renderer';\n\nimport { SamplerNode } from '../../blueprint/blueprint';\nimport { Panel, PanelProps } from './panel';\nimport { isValidBindingConnection } from './connection_validation';\n\nexport const SamplerPanel = (props: PanelProps<SamplerNode>) => {\n  const data = props.data;\n  const node = data.node;\n  return (\n    <Panel\n      title=\"Sampler\"\n      node={node}\n      onRename={name => data.onChange({ name })}\n      destroy={data.destroy}\n    >\n      <div className=\"SamplerDetails\">\n        <Handle\n          type=\"source\"\n          className=\"Handle Binding\"\n          position={'bottom' as Position}\n          isValidConnection={c => isValidBindingConnection(c, data.blueprint)}\n        />\n      </div>\n    </Panel>\n  );\n};\n","import './panel.css';\n\nimport {\n  BufferBindingNode,\n  BufferBindingStorageType,\n} from '../../blueprint/blueprint';\nimport { BindingPanel } from './binding_panel';\nimport { Panel, PanelProps } from './panel';\n\nexport const BufferBindingPanel = ({ data }: PanelProps<BufferBindingNode>) => {\n  const node = data.node;\n  return (\n    <Panel className=\"BufferBinding\" node={node} destroy={data.destroy}>\n      <select\n        value={node.storageType}\n        onChange={e =>\n          data.onChange({\n            storageType: e.currentTarget.value as BufferBindingStorageType,\n          })\n        }\n      >\n        <option value=\"storage-read\">Storage (r/o)</option>\n        <option value=\"storage\">Storage (r/w)</option>\n        <option value=\"uniform\">Uniform</option>\n        <option value=\"sampler\">Sampler</option>\n        <option value=\"texture\">Texture</option>\n      </select>\n      <BindingPanel data={data} />\n    </Panel>\n  );\n};\n","import './panel.css';\n\nimport { SamplerBindingNode } from '../../blueprint/blueprint';\nimport { BindingPanel } from './binding_panel';\nimport { Panel, PanelProps } from './panel';\n\nexport const SamplerBindingPanel = ({\n  data,\n}: PanelProps<SamplerBindingNode>) => {\n  return (\n    <Panel title=\"\" node={data.node} destroy={data.destroy}>\n      <BindingPanel data={data} />\n    </Panel>\n  );\n};\n","import './panel.css';\n\nimport { TextureBindingNode } from '../../blueprint/blueprint';\nimport { BindingPanel } from './binding_panel';\nimport { Panel, PanelProps } from './panel';\n\nexport const TextureBindingPanel = ({\n  data,\n}: PanelProps<TextureBindingNode>) => {\n  return (\n    <Panel title=\"\" node={data.node} destroy={data.destroy}>\n      <BindingPanel data={data} />\n    </Panel>\n  );\n};\n","import './panel.css';\n\nimport {\n  getBezierPath,\n  getEdgeCenter,\n  getMarkerEnd,\n  EdgeProps,\n} from 'react-flow-renderer';\n\ninterface Data {\n  destroy?: () => void;\n}\n\nexport const CustomEdge = ({\n  id,\n  sourceX,\n  sourceY,\n  targetX,\n  targetY,\n  sourcePosition,\n  targetPosition,\n  style = {},\n  data: anyData,\n  arrowHeadType,\n  markerEndId,\n}: EdgeProps) => {\n  const path = getBezierPath({\n    sourceX,\n    sourceY,\n    sourcePosition,\n    targetX,\n    targetY,\n    targetPosition,\n  });\n  const end = getMarkerEnd(arrowHeadType, markerEndId);\n  const [centerX, centerY] = getEdgeCenter({\n    sourceX,\n    sourceY,\n    targetX,\n    targetY,\n  });\n  const data = anyData as Data;\n  return (\n    <>\n      <path\n        id={id}\n        style={style}\n        className=\"react-flow__edge-path\"\n        d={path}\n        markerEnd={end}\n      />\n      {data.destroy && (\n        <foreignObject width={16} height={16} x={centerX - 8} y={centerY - 8}>\n          <div className=\"Edge\">\n            <button className=\"RemoveButton\" onClick={data.destroy} />\n          </div>\n        </foreignObject>\n      )}\n    </>\n  );\n};\n","import './code_editor.css';\n\nimport 'codemirror/keymap/sublime';\n\nimport CodeMirror, { IEditorInstance } from '@uiw/react-codemirror';\nimport React from 'react';\n\nimport { ShaderCompilationMessage } from '../gpu/program/shader_cache';\n\ninterface Props {\n  compilationMessages?: ShaderCompilationMessage[];\n  contents: string;\n  mutable: boolean;\n  onChange: (contents: string) => void;\n  theme: string;\n}\n\nexport class CodeEditor extends React.Component<Props> {\n  private isDecorating_: boolean;\n  private editorRef_: React.RefObject<IEditorInstance>;\n\n  constructor(props: Props) {\n    super(props);\n    this.isDecorating_ = false;\n    this.editorRef_ = React.createRef();\n  }\n\n  shouldComponentUpdate(nextProps: Props) {\n    return nextProps.theme !== this.props.theme;\n  }\n\n  refresh() {\n    const cm = this.editorRef_.current;\n    if (cm) {\n      cm.editor.refresh();\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"CodeEditor\">\n        <CodeMirror\n          ref={this.editorRef_}\n          value={this.props.contents}\n          onChange={this.onChange_}\n          onUpdate={this.onUpdate_}\n          options={{\n            theme: this.props.theme,\n            keyMap: 'sublime',\n            mode: 'rust',\n            gutters: ['GutterMessages'],\n            readOnly: !this.props.mutable,\n          }}\n        />\n      </div>\n    );\n  }\n\n  onChange_ = (e: CodeMirror.Editor, change: CodeMirror.EditorChange) => {\n    this.props.onChange(e.getValue());\n  };\n\n  onUpdate_ = (e: CodeMirror.Editor) => {\n    if (this.isDecorating_) {\n      return;\n    }\n\n    this.isDecorating_ = true;\n    e.getAllMarks().forEach(m => m.clear());\n    e.clearGutter('GutterMessages');\n    for (const m of this.props.compilationMessages ?? []) {\n      const className = `MarkedText-${m.type}`;\n      const line = m.lineNum;\n      e.markText(\n        { line, ch: m.linePos - 1 },\n        { line, ch: m.linePos + m.length - 1 },\n        { className }\n      );\n      const marker = document.createElement('div');\n      marker.classList.add('Marker', `Marker-${m.type}`);\n      e.setGutterMarker(line, 'GutterMessages', marker);\n    }\n    this.isDecorating_ = false;\n  };\n}\n","import './tab_container.css';\n\nimport React, { ReactNode } from 'react';\n\nimport { EditableLabel } from './editable_label';\n\ninterface TabDescriptor {\n  key: string;\n  title: string;\n  mutable: boolean;\n  onActivate?: () => void;\n  onClose?: () => void;\n  onRename?: (newName: string) => void;\n}\n\ninterface Props {\n  tabs: TabDescriptor[];\n  children: ReactNode;\n}\n\ninterface State {\n  activeTab: number;\n}\n\nexport class TabContainer extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      activeTab: 0,\n    };\n  }\n\n  componentDidUpdate() {\n    const numChildren = React.Children.count(this.props.children);\n    if (this.state.activeTab >= numChildren) {\n      this.setState({ activeTab: numChildren - 1 });\n    } else {\n      const tab = this.props.tabs[this.state.activeTab];\n      if (tab.onActivate) {\n        tab.onActivate();\n      }\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"TabContainer\">\n        {this.renderTabs_()}\n        <div className=\"ContentArea\">\n          {React.Children.toArray(this.props.children).map((child, i) => {\n            const active = i === this.state.activeTab;\n            return (\n              <div\n                key={i}\n                className={`Content ${active ? 'Active' : 'Inactive'}`}\n              >\n                {child}\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n\n  renderTabs_() {\n    return (\n      <div className=\"TabStrip\">\n        {this.props.tabs.map((tab, i) => {\n          const active = this.state.activeTab === i;\n          return (\n            <div\n              key={tab.key + tab.title}\n              className={`${active ? 'Tab Active' : 'Tab Inactive'}\n                          ${tab.mutable ? 'Removable' : 'Permanent'}`}\n              onClick={_ => this.setActiveTab_(i)}\n            >\n              <EditableLabel\n                enabled={tab.mutable && active}\n                value={tab.title}\n                onChange={tab.onRename ?? (() => ({}))}\n              />\n              {tab.mutable && (\n                <button\n                  className=\"RemoveButton\"\n                  onClick={e => {\n                    if (tab.onClose) {\n                      tab.onClose();\n                    }\n                    e.stopPropagation();\n                  }}\n                />\n              )}\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n\n  setActiveTab_(tab: number) {\n    this.setState({ activeTab: tab });\n  }\n}\n","import './editor.css';\n\nimport React from 'react';\nimport { FlowTransform } from 'react-flow-renderer';\n\nimport { deepCopy } from '../base/util';\nimport { Blueprint, ShaderID } from '../blueprint/blueprint';\nimport { BUILTIN_UNIFORMS_WGSL } from '../gpu/builtin_uniforms';\nimport { ShaderCompilationResults } from '../gpu/program/program';\nimport { BlueprintEditor } from './blueprint_editor';\nimport { CodeEditor } from './code_editor';\nimport { TabContainer } from './tab_container';\n\ninterface Props {\n  blueprint: Blueprint;\n  onBlueprintChange: (blueprint: Blueprint) => void;\n  compilationResults: ShaderCompilationResults;\n  viewTransform: FlowTransform;\n  onViewTransformChange: (transform: FlowTransform) => void;\n  codeMirrorTheme: string;\n}\n\nexport const Editor = (props: Props) => {\n  const removeShader = (id: ShaderID) => {\n    const blueprint = deepCopy(props.blueprint);\n    delete blueprint.shaders[id];\n    props.onBlueprintChange(blueprint);\n  };\n\n  const renameShader = (id: ShaderID, newName: string) => {\n    const blueprint = deepCopy(props.blueprint);\n    blueprint.shaders[id].name = newName;\n    props.onBlueprintChange(blueprint);\n  };\n\n  const refreshEditor = (ref: React.RefObject<CodeEditor>) => {\n    if (ref.current) {\n      ref.current.refresh();\n    }\n  };\n\n  const shaders = Object.entries(props.blueprint.shaders);\n  const uniformsRef: React.RefObject<CodeEditor> = React.createRef();\n  const refs: React.RefObject<CodeEditor>[] = shaders.map(() =>\n    React.createRef()\n  );\n\n  return (\n    <div className=\"Editor\">\n      <TabContainer\n        tabs={[\n          { key: 'Blueprint', title: 'Blueprint', mutable: false },\n          {\n            key: 'Uniforms',\n            title: 'Uniforms',\n            mutable: false,\n            onActivate: () => {\n              refreshEditor(uniformsRef);\n            },\n          },\n          ...shaders.map(([id, shader], index) => ({\n            key: id,\n            title: shader.name,\n            mutable: true,\n            onActivate: () => {\n              refreshEditor(refs[index]);\n            },\n            onClose: () => removeShader(id),\n            onRename: (newName: string) => renameShader(id, newName),\n          })),\n        ]}\n      >\n        <BlueprintEditor\n          blueprint={props.blueprint}\n          transform={props.viewTransform}\n          onChange={props.onBlueprintChange}\n          onTransformChange={props.onViewTransformChange}\n        />\n        <CodeEditor\n          ref={uniformsRef}\n          key=\"Uniforms\"\n          contents={BUILTIN_UNIFORMS_WGSL}\n          mutable={false}\n          onChange={() => ({})}\n          theme={props.codeMirrorTheme}\n        />\n        {shaders.map(([id, shader], index) => (\n          <CodeEditor\n            key={id}\n            ref={refs[index]}\n            compilationMessages={props.compilationResults.get(shader.id)}\n            contents={shader.code}\n            mutable={true}\n            onChange={code => {\n              const blueprint = deepCopy(props.blueprint);\n              blueprint.shaders[id].code = code;\n              props.onBlueprintChange(blueprint);\n            }}\n            theme={props.codeMirrorTheme}\n          />\n        ))}\n      </TabContainer>\n    </div>\n  );\n};\n","import './app.css';\n\nimport React from 'react';\nimport { FlowTransform } from 'react-flow-renderer';\n\nimport { LocalPersistent } from './base/local_persistent';\nimport { Blueprint } from './blueprint/blueprint';\nimport {\n  deserializeBlueprint,\n  serializeBlueprint,\n  SerializedBlueprint,\n} from './blueprint/serialization';\nimport { FrameProducer } from './gpu/frame_producer';\nimport { ShaderCompilationResults } from './gpu/program/program';\nimport { ControlPanel } from './ui/control_panel';\nimport { Display, DisplayConfig } from './ui/display';\nimport { Editor } from './ui/editor';\nimport { AppData } from './app_data';\n\ninterface Props {\n  data: LocalPersistent<AppData>;\n}\n\nexport interface AppState {\n  blueprint: Blueprint;\n  savedBlueprints: Record<string, SerializedBlueprint>;\n  displayConfig: DisplayConfig;\n  codeMirrorTheme: string;\n  editorViewTransform: FlowTransform;\n  compilationResults: ShaderCompilationResults;\n}\n\nclass App extends React.Component<Props, AppState> {\n  private frameProducer_: FrameProducer;\n\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      blueprint: deserializeBlueprint(this.data.blueprint),\n      savedBlueprints: this.data.savedBlueprints,\n      displayConfig: this.data.displayConfig,\n      codeMirrorTheme: this.data.codeMirrorTheme,\n      editorViewTransform: this.data.editorViewTransform,\n      compilationResults: new Map(),\n    };\n\n    this.frameProducer_ = new FrameProducer();\n    this.frameProducer_.setBlueprint(this.state.blueprint);\n  }\n\n  get data() {\n    return this.props.data.value;\n  }\n\n  updateData_(update: Partial<AppData>) {\n    const data = this.props.data.value;\n    Object.assign(data, update);\n    this.props.data.value = data;\n  }\n\n  componentDidMount() {\n    this.frameProducer_.onShadersCompiled = this.onShadersCompiled_;\n  }\n\n  async componentDidUpdate() {\n    const blueprint = this.state.blueprint;\n    this.frameProducer_.setBlueprint(blueprint);\n    this.updateData_({\n      blueprint: await serializeBlueprint(blueprint),\n      savedBlueprints: this.state.savedBlueprints,\n      displayConfig: this.state.displayConfig,\n      codeMirrorTheme: this.state.codeMirrorTheme,\n      editorViewTransform: this.state.editorViewTransform,\n    });\n  }\n\n  componentWillUnmount() {\n    this.frameProducer_.stop();\n  }\n\n  onDisplayConfigChange = (change: Partial<DisplayConfig>) => {\n    this.setState(state => {\n      return {\n        displayConfig: Object.assign({ ...state.displayConfig }, change),\n      };\n    });\n  };\n\n  onBlueprintChange_ = (blueprint: Blueprint) => {\n    this.setState({ blueprint });\n  };\n\n  onViewTransformChange_ = (transform: FlowTransform) => {\n    this.setState({ editorViewTransform: transform });\n  };\n\n  onShadersCompiled_ = (compilationResults: ShaderCompilationResults) => {\n    this.setState({ compilationResults });\n  };\n\n  onSaveBlueprint_ = async (name: string) => {\n    const serialized = await serializeBlueprint(this.state.blueprint);\n    this.setState(state => ({\n      savedBlueprints: {\n        ...state.savedBlueprints,\n        [name]: serialized,\n      },\n    }));\n  };\n\n  onLoadBlueprint_ = async (name: string) => {\n    const blueprint = this.state.savedBlueprints[name];\n    if (!blueprint) {\n      return;\n    }\n    this.onBlueprintChange_(deserializeBlueprint(blueprint));\n  };\n\n  onImportBlueprint_ = (blueprint: SerializedBlueprint) => {\n    this.onBlueprintChange_(deserializeBlueprint(blueprint));\n  };\n\n  onDeleteBlueprint_ = (name: string) => {\n    this.setState(state => {\n      delete state.savedBlueprints[name];\n      return { savedBlueprints: state.savedBlueprints };\n    });\n  };\n\n  onCodeMirrorThemeChange_ = (name: string) => {\n    this.setState({ codeMirrorTheme: name });\n  };\n\n  render() {\n    const renderDisplay = (canvas: HTMLCanvasElement) => {\n      let resolution: { width: number; height: number };\n      const config = this.state.displayConfig;\n      if (config.resolution.mode === 'pixel') {\n        const pixelSize =\n          config.resolution.pixelSize! >= 1 ? config.resolution.pixelSize! : 1;\n        resolution = {\n          width: canvas.clientWidth / pixelSize,\n          height: canvas.clientHeight / pixelSize,\n        };\n      } else {\n        resolution = { ...config.resolution.framebufferSize! };\n      }\n\n      this.frameProducer_.render(canvas, resolution);\n    };\n\n    return (\n      <div className=\"App\">\n        <div className=\"App-header\">\n          <div className=\"App-title\">WebGPU Playground</div>\n        </div>\n        <div className=\"App-top\">\n          <div className=\"App-canvas\">\n            <Display render={renderDisplay} config={this.state.displayConfig} />\n          </div>\n          <div className=\"App-editor\">\n            <Editor\n              compilationResults={this.state.compilationResults}\n              blueprint={this.state.blueprint}\n              onBlueprintChange={this.onBlueprintChange_}\n              codeMirrorTheme={this.state.codeMirrorTheme}\n              viewTransform={this.state.editorViewTransform}\n              onViewTransformChange={this.onViewTransformChange_}\n            />\n          </div>\n        </div>\n        <div className=\"App-bottom\">\n          <ControlPanel\n            blueprint={this.state.blueprint}\n            displayConfig={this.state.displayConfig}\n            onDisplayConfigChange={this.onDisplayConfigChange}\n            savedBlueprints={this.state.savedBlueprints}\n            onSaveBlueprint={this.onSaveBlueprint_}\n            onLoadBlueprint={this.onLoadBlueprint_}\n            onImportBlueprint={this.onImportBlueprint_}\n            onDeleteBlueprint={this.onDeleteBlueprint_}\n            codeMirrorTheme={this.state.codeMirrorTheme}\n            onCodeMirrorThemeChange={this.onCodeMirrorThemeChange_}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import { FlowTransform } from 'react-flow-renderer';\n\nimport { SerializedBlueprint } from './blueprint/serialization';\nimport { BASIC } from './presets/basic';\nimport { BOIDS } from './presets/boids';\nimport { INSTANCES } from './presets/instances';\nimport { DisplayConfig } from './ui/display';\n\nexport interface AppData {\n  blueprint: SerializedBlueprint;\n  savedBlueprints: Record<string, SerializedBlueprint>;\n  displayConfig: DisplayConfig;\n  codeMirrorTheme: string;\n  editorViewTransform: FlowTransform;\n}\n\nexport const DEFAULT_APP_DATA: AppData = {\n  blueprint: {\n    version: 1,\n    nodes: [],\n    shaders: [],\n  },\n  savedBlueprints: {\n    Basic: BASIC,\n    Boids: BOIDS,\n    Instances: INSTANCES,\n  },\n  displayConfig: {\n    aspect: '1:1',\n    resolution: { mode: 'pixel', pixelSize: 1 },\n  },\n  codeMirrorTheme: 'paraiso-dark',\n  editorViewTransform: { x: 0, y: 0, zoom: 1 },\n};\n","import { SerializedBlueprint } from '../blueprint/serialization';\n\nconst VERTEX = `[[stage(vertex)]]\nfn main([[builtin(vertex_index)]] index: u32)\n    -> [[builtin(position)]] vec4<f32> {\n  let x = select(-1.0, 1.0, index >= 1u && index <= 3u);\n  let y = select(-1.0, 1.0, index >= 2u && index <= 4u);\n  return vec4<f32>(x, y, 0.0, 1.0);\n}\n`;\n\nconst FRAGMENT = `[[stage(fragment)]]\nfn main([[builtin(position)]] coord: vec4<f32>)\n    -> [[location(0)]] vec4<f32> {\n  let uv = coord.xy / vec2<f32>(builtinUniforms.resolution.xy);\n  let col = 0.5 + 0.5 * cos(builtinUniforms.time + uv.xyx +\n                            vec3<f32>(0.0, 20.0, 40.0));\n  return vec4<f32>(col, 1.0);\n}\n`;\n\nexport const BASIC: SerializedBlueprint = {\n  version: 1,\n  nodes: [\n    {\n      id: 'render1',\n      name: 'render quad',\n      position: { x: 100, y: 100 },\n      type: 'render',\n      indexed: false,\n      numVertices: 6,\n      numInstances: 1,\n      vertexShader: 'vertex1',\n      vertexEntryPoint: 'main',\n      fragmentShader: 'fragment1',\n      fragmentEntryPoint: 'main',\n    },\n  ],\n  shaders: [\n    {\n      id: 'vertex1',\n      name: 'Vertex',\n      code: VERTEX,\n    },\n    {\n      id: 'fragment1',\n      name: 'Fragment',\n      code: FRAGMENT,\n    },\n  ],\n};\n","import { SerializedBlueprint } from '../blueprint/serialization';\n\nexport const BOIDS: SerializedBlueprint = {\n  version: 1,\n  nodes: [\n    {\n      id: 'compute1',\n      name: 'first update',\n      type: 'compute',\n      position: {\n        x: 223,\n        y: 438,\n      },\n      shader: 'compute1',\n      entryPoint: 'main',\n      dispatchSize: {\n        x: 2000,\n        y: 1,\n        z: 1,\n      },\n    },\n    {\n      id: 'buffer1',\n      name: 'buffer1',\n      type: 'buffer',\n      position: {\n        x: -55,\n        y: -35,\n      },\n      size: 32000,\n      init: 'random-floats',\n    },\n    {\n      id: 'buffer2',\n      name: 'buffer2',\n      type: 'buffer',\n      position: {\n        x: 610,\n        y: 19,\n      },\n      size: 32000,\n      init: 'zero',\n    },\n    {\n      id: 'render1',\n      name: 'render boids',\n      position: {\n        x: -262,\n        y: 374,\n      },\n      type: 'render',\n      indexed: false,\n      numVertices: 3,\n      numInstances: 1000,\n      vertexShader: 'vertex1',\n      vertexEntryPoint: 'main',\n      fragmentShader: 'fragment1',\n      fragmentEntryPoint: 'main',\n    },\n    {\n      id: 'compute2',\n      name: 'update B',\n      type: 'compute',\n      position: {\n        x: 658,\n        y: 442,\n      },\n      shader: 'compute1',\n      entryPoint: 'main',\n      dispatchSize: {\n        x: 1000,\n        y: 1,\n        z: 1,\n      },\n    },\n    {\n      id: 'binding1a',\n      name: '',\n      position: {\n        x: 65,\n        y: 210,\n      },\n      type: 'connection',\n      connectionType: 'binding',\n      bindingType: 'buffer',\n      storageType: 'storage-read',\n      group: 0,\n      binding: 1,\n      source: 'buffer1',\n      target: 'compute1',\n    },\n    {\n      id: 'binding1b',\n      name: '',\n      position: {\n        x: -191,\n        y: 140,\n      },\n      type: 'connection',\n      connectionType: 'binding',\n      bindingType: 'buffer',\n      storageType: 'storage-read',\n      group: 0,\n      binding: 1,\n      source: 'buffer1',\n      target: 'render1',\n    },\n    {\n      id: 'binding2',\n      name: '',\n      position: {\n        x: 220,\n        y: 218,\n      },\n      type: 'connection',\n      connectionType: 'binding',\n      bindingType: 'buffer',\n      storageType: 'storage',\n      group: 0,\n      binding: 2,\n      source: 'buffer1',\n      target: 'compute2',\n    },\n    {\n      id: 'binding3',\n      name: '',\n      position: {\n        x: 713,\n        y: 179,\n      },\n      type: 'connection',\n      connectionType: 'binding',\n      bindingType: 'buffer',\n      storageType: 'storage-read',\n      group: 0,\n      binding: 1,\n      source: 'buffer2',\n      target: 'compute2',\n    },\n    {\n      id: 'binding4',\n      name: '',\n      position: {\n        x: 566,\n        y: 181,\n      },\n      type: 'connection',\n      connectionType: 'binding',\n      bindingType: 'buffer',\n      storageType: 'storage',\n      group: 0,\n      binding: 2,\n      source: 'buffer2',\n      target: 'compute1',\n    },\n    {\n      id: 'queue1',\n      name: '',\n      position: {\n        x: 100,\n        y: 100,\n      },\n      source: 'render1',\n      target: 'compute1',\n      type: 'connection',\n      connectionType: 'queue',\n    },\n    {\n      id: 'queue2',\n      name: '',\n      position: {\n        x: 100,\n        y: 100,\n      },\n      source: 'compute1',\n      target: 'compute2',\n      type: 'connection',\n      connectionType: 'queue',\n    },\n  ],\n  shaders: [\n    {\n      id: 'compute1',\n      name: 'compute',\n      code: 'let kRule1Distance = 0.1;\\nlet kRule2Distance = 0.025;\\nlet kRule3Distance = 0.025;\\nlet kRule1Scale = 0.02;\\nlet kRule2Scale = 0.05;\\nlet kRule3Scale = 0.005;\\nlet kNumParticles = 2000u;\\n\\nstruct Particle {\\n  pos: vec2<f32>;\\n  vel: vec2<f32>;\\n};\\n\\n[[block]] struct Particles {\\n  particles: array<Particle>;\\n};\\n\\n[[group(0), binding(1)]] var<storage, read> particlesA: Particles;\\n[[group(0), binding(2)]] var<storage, read_write> particlesB: Particles;\\n\\n[[stage(compute), workgroup_size(1)]]\\nfn main([[builtin(global_invocation_id)]] id: vec3<u32>) {\\n  let index = id.x;\\n  if (index >= kNumParticles) {\\n    return;\\n  }\\n\\n  var vPos = particlesA.particles[index].pos;\\n  var vVel = particlesA.particles[index].vel;\\n  var cMass = vec2<f32>(0.0, 0.0);\\n  var cVel = vec2<f32>(0.0, 0.0);\\n  var colVel = vec2<f32>(0.0, 0.0);\\n  var cMassCount = 0u;\\n  var cVelCount = 0u;\\n  var pos: vec2<f32>;\\n  var vel: vec2<f32>;\\n\\n  for (var i = 0u; i < kNumParticles; i = i + 1u) {\\n    if (i == index) {\\n      continue;\\n    }\\n    pos = particlesA.particles[i].pos.xy;\\n    vel = particlesA.particles[i].vel.xy;\\n    if (distance(pos, vPos) < kRule1Distance) {\\n      cMass = cMass + pos;\\n      cMassCount = cMassCount + 1u;\\n    }\\n    if (distance(pos, vPos) < kRule2Distance) {\\n      colVel = colVel - (pos - vPos);\\n    }\\n    if (distance(pos, vPos) < kRule3Distance) {\\n      cVel = cVel + vel;\\n      cVelCount = cVelCount + 1u;\\n    }\\n  }\\n\\n  if (cMassCount > 0u) {\\n    cMass = (cMass / vec2<f32>(f32(cMassCount), f32(cMassCount))) - vPos;\\n  }\\n\\n  if (cVelCount > 0u) {\\n    cVel = cVel / vec2<f32>(f32(cVelCount), f32(cVelCount));\\n  }\\n\\n  vVel = vVel + (cMass * kRule1Scale) + (colVel * kRule2Scale) +\\n      (cVel * kRule3Scale);\\n\\n  vVel = normalize(vVel) * clamp(length(vVel), 0.0, 1.0);\\n  vPos = vPos + (vVel * builtinUniforms.timeDelta * 0.25);\\n\\n  if (vPos.x < -1.0) {\\n    vPos.x = vPos.x + 2.0;\\n  }\\n  if (vPos.x > 1.0) {\\n    vPos.x = vPos.x - 2.0;\\n  }\\n  if (vPos.y < -1.0) {\\n    vPos.y = vPos.y + 2.0;\\n  }\\n  if (vPos.y > 1.0) {\\n    vPos.y = vPos.y - 2.0;\\n  }\\n\\n  particlesB.particles[index].pos = vPos;\\n  particlesB.particles[index].vel = vVel;\\n}\\n',\n    },\n    {\n      id: 'vertex1',\n      name: 'vertex',\n      code: 'struct Particle {\\n  particlePos: vec2<f32>;\\n  particleVel: vec2<f32>;\\n};\\n\\n[[block]] struct Particles {\\n  particles: array<Particle>;\\n};\\n\\n[[group(0), binding(1)]] var<storage, read> particles: Particles;\\n\\nfn getPos(vid: u32) -> vec2<f32> {\\n  return select(\\n      vec2<f32>(-0.01, -0.02),\\n      select(vec2<f32>(0.01, -0.02), vec2<f32>(0.00, 0.02), vid >= 2u),\\n      vid >= 1u);\\n}\\n\\n[[stage(vertex)]]\\nfn main([[builtin(vertex_index)]] vid: u32,\\n        [[builtin(instance_index)]] id: u32)\\n    -> [[builtin(position)]] vec4<f32> {\\n  let angle = -atan2(particles.particles[id].particleVel.x, particles.particles[id].particleVel.y);\\n  let ppos = getPos(vid);\\n  let pos = vec2<f32>(ppos.x * cos(angle) - ppos.y * sin(angle),\\n                      ppos.x * sin(angle) + ppos.y * cos(angle));\\n  return vec4<f32>(pos + particles.particles[id].particlePos, 0.0, 1.0);\\n}\\n',\n    },\n    {\n      id: 'fragment1',\n      name: 'fragment',\n      code: '[[stage(fragment)]]\\nfn main() -> [[location(0)]] vec4<f32> {\\n  return vec4<f32>(0.0, 1.0, 0.0, 1.0);\\n}\\n',\n    },\n  ],\n};\n","import { SerializedBlueprint } from '../blueprint/serialization';\n\nconst VERTEX = `[[stage(vertex)]]\nfn main([[builtin(vertex_index)]] index: u32,\n        [[builtin(instance_index)]] instance: u32)\n    -> [[builtin(position)]] vec4<f32> {\n  let t = builtinUniforms.time * 6.283 / 2.0;\n  let b = 1.0 + f32(instance / 10u) * 0.5;\n  let k = 0.5 + cos(t * 3.0) * 0.2;\n  let c = k * cos(t);\n  let s = k * sin(t);\n  let xo = cos(f32(instance) * 6.283 / 10.0) * 0.5 * b;\n  let yo = sin(f32(instance) * 6.283 / 10.0) * 0.5 * b;\n  let x = select(-1.0, 1.0, index >= 1u && index <= 3u) * 0.3;\n  let y = select(-1.0, 1.0, index >= 2u && index <= 4u) * 0.3;\n  return vec4<f32>(x * c - y * s + xo, x * s + y * c + yo, 0.0, 1.0);\n}\n`;\n\nconst FRAGMENT = `[[stage(fragment)]]\nfn main([[builtin(position)]] coord: vec4<f32>)\n    -> [[location(0)]] vec4<f32> {\n  let uv = coord.xy / vec2<f32>(builtinUniforms.resolution.xy);\n  let col = 0.5 + 0.5 * cos(builtinUniforms.time + uv.xyx + vec3<f32>(0.0, 20.0, 40.0));\n  return vec4<f32>(col, 1.0);\n}\n`;\n\nexport const INSTANCES: SerializedBlueprint = {\n  version: 1,\n  nodes: [\n    {\n      id: 'render1',\n      name: 'render quad',\n      position: { x: 100, y: 100 },\n      type: 'render',\n      indexed: false,\n      numVertices: 6,\n      numInstances: 30,\n      vertexShader: 'vertex1',\n      vertexEntryPoint: 'main',\n      fragmentShader: 'fragment1',\n      fragmentEntryPoint: 'main',\n    },\n  ],\n  shaders: [\n    {\n      id: 'vertex1',\n      name: 'Vertex',\n      code: VERTEX,\n    },\n    {\n      id: 'fragment1',\n      name: 'Fragment',\n      code: FRAGMENT,\n    },\n  ],\n};\n","import { Debouncer } from './debouncer';\nimport { deepCopy, deepUpdate } from './util';\n\nimport localForage from 'localforage';\n\nconst DEFAULT_DEBOUNCE_MS = 100;\n\ninterface Options<Type> {\n  key: string;\n  default: Type;\n  debounceMs?: number;\n}\n\nexport class LocalPersistent<Type> {\n  private key_: string;\n  private cachedValue_: Type;\n  private debouncer_: Debouncer;\n\n  constructor(key: string, initialValue: Type, debounceMs: number) {\n    this.key_ = key;\n    this.cachedValue_ = initialValue;\n    this.debouncer_ = new Debouncer(debounceMs);\n  }\n\n  set value(value: Type) {\n    this.cachedValue_ = value;\n    this.debouncer_.invoke(() => localForage.setItem(this.key_, value));\n  }\n\n  get value(): Type {\n    return this.cachedValue_;\n  }\n}\n\nfunction loadValueFromLocalStorage<Type>(key: string): null | Type {\n  const serializedValue = localStorage[key];\n  let cachedValue = null;\n  if (serializedValue) {\n    cachedValue = JSON.parse(serializedValue) ?? null;\n  }\n  if (cachedValue !== null) {\n    return cachedValue as Type;\n  }\n  return null;\n}\n\nexport async function restoreLocalPersistent<Type>(\n  options: Options<Type>\n): Promise<LocalPersistent<Type>> {\n  const asyncCachedValue = localForage.getItem(options.key);\n  const cachedLegacyValue = loadValueFromLocalStorage<Type>(options.key);\n  const cachedValue = (await asyncCachedValue) as null | Type;\n  let restoredValue: null | Partial<Type> = null;\n  if (cachedValue !== null) {\n    restoredValue = cachedValue;\n  } else {\n    restoredValue = cachedLegacyValue ?? {};\n  }\n  return new LocalPersistent<Type>(\n    options.key,\n    deepUpdate(deepCopy(options.default), restoredValue),\n    options.debounceMs ?? DEFAULT_DEBOUNCE_MS\n  );\n}\n","import './index.css';\n\nimport localForage from 'localforage';\nimport React from 'react';\nimport { render } from 'react-dom';\n\nimport App from './app';\nimport { AppData, DEFAULT_APP_DATA } from './app_data';\nimport { restoreLocalPersistent } from './base/local_persistent';\n\nlocalForage.config({\n  driver: localForage.INDEXEDDB,\n  name: 'shady',\n  version: 1,\n  storeName: 'local_state',\n});\n\nasync function init() {\n  const data = await restoreLocalPersistent<AppData>({\n    key: 'gpu-app-state',\n    default: DEFAULT_APP_DATA,\n  });\n\n  render(\n    <React.StrictMode>\n      <App data={data} />\n    </React.StrictMode>,\n    document.getElementById('root')\n  );\n}\n\ninit();\n"],"sourceRoot":""}